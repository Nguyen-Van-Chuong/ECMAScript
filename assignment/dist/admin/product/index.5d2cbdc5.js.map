{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-8dc71c82a63e2e6a.js","node_modules/firebase/storage/dist/esm/index.esm.js","node_modules/@firebase/storage/dist/index.esm2017.js","node_modules/@firebase/storage/src/implementation/constants.ts","node_modules/@firebase/storage/src/implementation/error.ts","node_modules/@firebase/storage/src/implementation/location.ts","node_modules/@firebase/storage/src/implementation/failrequest.ts","node_modules/@firebase/storage/src/implementation/backoff.ts","node_modules/@firebase/storage/src/implementation/type.ts","node_modules/@firebase/storage/src/implementation/url.ts","node_modules/@firebase/storage/src/implementation/connection.ts","node_modules/@firebase/storage/src/implementation/utils.ts","node_modules/@firebase/storage/src/implementation/request.ts","node_modules/@firebase/storage/src/implementation/fs.ts","node_modules/@firebase/storage/src/platform/browser/base64.ts","node_modules/@firebase/storage/src/implementation/string.ts","node_modules/@firebase/storage/src/implementation/blob.ts","node_modules/@firebase/storage/src/implementation/json.ts","node_modules/@firebase/storage/src/implementation/path.ts","node_modules/@firebase/storage/src/implementation/metadata.ts","node_modules/@firebase/storage/src/implementation/list.ts","node_modules/@firebase/storage/src/implementation/requestinfo.ts","node_modules/@firebase/storage/src/implementation/requests.ts","node_modules/@firebase/storage/src/implementation/taskenums.ts","node_modules/@firebase/storage/src/implementation/observer.ts","node_modules/@firebase/storage/src/implementation/async.ts","node_modules/@firebase/storage/src/platform/browser/connection.ts","node_modules/@firebase/storage/src/task.ts","node_modules/@firebase/storage/src/reference.ts","node_modules/@firebase/storage/src/service.ts","node_modules/@firebase/storage/src/constants.ts","node_modules/@firebase/storage/src/api.ts","node_modules/@firebase/storage/src/api.browser.ts","node_modules/@firebase/storage/src/index.ts"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"fc9000ea5d2cbdc5\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, globalThis, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\n\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, assetsToDispose\n/*: Array<[ParcelRequire, string]> */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // Web extension context\n\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome; // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n\n  var supportsSourceURL = false;\n\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  } // $FlowFixMe\n\n\n  ws.onmessage = async function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH); // Handle HMR Update\n\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear(); // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n\n        await hmrApplyUpdates(assets); // Dispose all old assets.\n\n        let processedAssets = {}\n        /*: {|[string]: boolean|} */\n        ;\n\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        } // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n\n\n        processedAssets = {};\n\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n\n      return new Promise((resolve, reject) => {\n        var _document$head;\n\n        script.onload = () => resolve(script);\n\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\n\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      } // $FlowFixMe\n\n\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push(...p);\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\n\nfunction hmrDispose(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n\n  delete bundle.cache[id];\n}\n\nfunction hmrAccept(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  // Execute the module.\n  bundle(id); // Run the accept callbacks in the new version of the module.\n\n  var cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        }); // $FlowFixMe[method-unbinding]\n\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}",null,null,"/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Constants used in the Firebase Storage library.\n */\n\n/**\n * Domain name for firebase storage.\n */\nexport const DEFAULT_HOST = 'firebasestorage.googleapis.com';\n\n/**\n * The key in Firebase config json for the storage bucket.\n */\nexport const CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\n\n/**\n * 2 minutes\n *\n * The timeout for all operations except upload.\n */\nexport const DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\n\n/**\n * 10 minutes\n *\n * The timeout for upload.\n */\nexport const DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n\n/**\n * 1 second\n */\nexport const DEFAULT_MIN_SLEEP_TIME_MILLIS = 1000;\n\n/**\n * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported\n * enough for us to use it directly.\n */\nexport const MIN_SAFE_INTEGER = -9007199254740991;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\n\nimport { CONFIG_STORAGE_BUCKET_KEY } from './constants';\n\n/**\n * An error returned by the Firebase Storage SDK.\n * @public\n */\nexport class StorageError extends FirebaseError {\n  private readonly _baseMessage: string;\n  /**\n   * Stores custom error data unque to StorageError.\n   */\n  customData: { serverResponse: string | null } = { serverResponse: null };\n\n  /**\n   * @param code - A StorageErrorCode string to be prefixed with 'storage/' and\n   *  added to the end of the message.\n   * @param message  - Error message.\n   * @param status_ - Corresponding HTTP Status Code\n   */\n  constructor(code: StorageErrorCode, message: string, private status_ = 0) {\n    super(\n      prependCode(code),\n      `Firebase Storage: ${message} (${prependCode(code)})`\n    );\n    this._baseMessage = this.message;\n    // Without this, `instanceof StorageError`, in tests for example,\n    // returns false.\n    Object.setPrototypeOf(this, StorageError.prototype);\n  }\n\n  get status(): number {\n    return this.status_;\n  }\n\n  set status(status: number) {\n    this.status_ = status;\n  }\n\n  /**\n   * Compares a StorageErrorCode against this error's code, filtering out the prefix.\n   */\n  _codeEquals(code: StorageErrorCode): boolean {\n    return prependCode(code) === this.code;\n  }\n\n  /**\n   * Optional response message that was added by the server.\n   */\n  get serverResponse(): null | string {\n    return this.customData.serverResponse;\n  }\n\n  set serverResponse(serverResponse: string | null) {\n    this.customData.serverResponse = serverResponse;\n    if (this.customData.serverResponse) {\n      this.message = `${this._baseMessage}\\n${this.customData.serverResponse}`;\n    } else {\n      this.message = this._baseMessage;\n    }\n  }\n}\n\nexport const errors = {};\n\n/**\n * @public\n * Error codes that can be attached to `StorageError`s.\n */\nexport enum StorageErrorCode {\n  // Shared between all platforms\n  UNKNOWN = 'unknown',\n  OBJECT_NOT_FOUND = 'object-not-found',\n  BUCKET_NOT_FOUND = 'bucket-not-found',\n  PROJECT_NOT_FOUND = 'project-not-found',\n  QUOTA_EXCEEDED = 'quota-exceeded',\n  UNAUTHENTICATED = 'unauthenticated',\n  UNAUTHORIZED = 'unauthorized',\n  UNAUTHORIZED_APP = 'unauthorized-app',\n  RETRY_LIMIT_EXCEEDED = 'retry-limit-exceeded',\n  INVALID_CHECKSUM = 'invalid-checksum',\n  CANCELED = 'canceled',\n  // JS specific\n  INVALID_EVENT_NAME = 'invalid-event-name',\n  INVALID_URL = 'invalid-url',\n  INVALID_DEFAULT_BUCKET = 'invalid-default-bucket',\n  NO_DEFAULT_BUCKET = 'no-default-bucket',\n  CANNOT_SLICE_BLOB = 'cannot-slice-blob',\n  SERVER_FILE_WRONG_SIZE = 'server-file-wrong-size',\n  NO_DOWNLOAD_URL = 'no-download-url',\n  INVALID_ARGUMENT = 'invalid-argument',\n  INVALID_ARGUMENT_COUNT = 'invalid-argument-count',\n  APP_DELETED = 'app-deleted',\n  INVALID_ROOT_OPERATION = 'invalid-root-operation',\n  INVALID_FORMAT = 'invalid-format',\n  INTERNAL_ERROR = 'internal-error',\n  UNSUPPORTED_ENVIRONMENT = 'unsupported-environment'\n}\n\nexport function prependCode(code: StorageErrorCode): string {\n  return 'storage/' + code;\n}\n\nexport function unknown(): StorageError {\n  const message =\n    'An unknown error occurred, please check the error payload for ' +\n    'server response.';\n  return new StorageError(StorageErrorCode.UNKNOWN, message);\n}\n\nexport function objectNotFound(path: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.OBJECT_NOT_FOUND,\n    \"Object '\" + path + \"' does not exist.\"\n  );\n}\n\nexport function bucketNotFound(bucket: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.BUCKET_NOT_FOUND,\n    \"Bucket '\" + bucket + \"' does not exist.\"\n  );\n}\n\nexport function projectNotFound(project: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.PROJECT_NOT_FOUND,\n    \"Project '\" + project + \"' does not exist.\"\n  );\n}\n\nexport function quotaExceeded(bucket: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.QUOTA_EXCEEDED,\n    \"Quota for bucket '\" +\n      bucket +\n      \"' exceeded, please view quota on \" +\n      'https://firebase.google.com/pricing/.'\n  );\n}\n\nexport function unauthenticated(): StorageError {\n  const message =\n    'User is not authenticated, please authenticate using Firebase ' +\n    'Authentication and try again.';\n  return new StorageError(StorageErrorCode.UNAUTHENTICATED, message);\n}\n\nexport function unauthorizedApp(): StorageError {\n  return new StorageError(\n    StorageErrorCode.UNAUTHORIZED_APP,\n    'This app does not have permission to access Firebase Storage on this project.'\n  );\n}\n\nexport function unauthorized(path: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.UNAUTHORIZED,\n    \"User does not have permission to access '\" + path + \"'.\"\n  );\n}\n\nexport function retryLimitExceeded(): StorageError {\n  return new StorageError(\n    StorageErrorCode.RETRY_LIMIT_EXCEEDED,\n    'Max retry time for operation exceeded, please try again.'\n  );\n}\n\nexport function invalidChecksum(\n  path: string,\n  checksum: string,\n  calculated: string\n): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_CHECKSUM,\n    \"Uploaded/downloaded object '\" +\n      path +\n      \"' has checksum '\" +\n      checksum +\n      \"' which does not match '\" +\n      calculated +\n      \"'. Please retry the upload/download.\"\n  );\n}\n\nexport function canceled(): StorageError {\n  return new StorageError(\n    StorageErrorCode.CANCELED,\n    'User canceled the upload/download.'\n  );\n}\n\nexport function invalidEventName(name: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_EVENT_NAME,\n    \"Invalid event name '\" + name + \"'.\"\n  );\n}\n\nexport function invalidUrl(url: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_URL,\n    \"Invalid URL '\" + url + \"'.\"\n  );\n}\n\nexport function invalidDefaultBucket(bucket: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_DEFAULT_BUCKET,\n    \"Invalid default bucket '\" + bucket + \"'.\"\n  );\n}\n\nexport function noDefaultBucket(): StorageError {\n  return new StorageError(\n    StorageErrorCode.NO_DEFAULT_BUCKET,\n    'No default bucket ' +\n      \"found. Did you set the '\" +\n      CONFIG_STORAGE_BUCKET_KEY +\n      \"' property when initializing the app?\"\n  );\n}\n\nexport function cannotSliceBlob(): StorageError {\n  return new StorageError(\n    StorageErrorCode.CANNOT_SLICE_BLOB,\n    'Cannot slice blob for upload. Please retry the upload.'\n  );\n}\n\nexport function serverFileWrongSize(): StorageError {\n  return new StorageError(\n    StorageErrorCode.SERVER_FILE_WRONG_SIZE,\n    'Server recorded incorrect upload file size, please retry the upload.'\n  );\n}\n\nexport function noDownloadURL(): StorageError {\n  return new StorageError(\n    StorageErrorCode.NO_DOWNLOAD_URL,\n    'The given file does not have any download URLs.'\n  );\n}\n\nexport function missingPolyFill(polyFill: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.UNSUPPORTED_ENVIRONMENT,\n    `${polyFill} is missing. Make sure to install the required polyfills. See https://firebase.google.com/docs/web/environments-js-sdk#polyfills for more information.`\n  );\n}\n\n/**\n * @internal\n */\nexport function invalidArgument(message: string): StorageError {\n  return new StorageError(StorageErrorCode.INVALID_ARGUMENT, message);\n}\n\nexport function invalidArgumentCount(\n  argMin: number,\n  argMax: number,\n  fnName: string,\n  real: number\n): StorageError {\n  let countPart;\n  let plural;\n  if (argMin === argMax) {\n    countPart = argMin;\n    plural = argMin === 1 ? 'argument' : 'arguments';\n  } else {\n    countPart = 'between ' + argMin + ' and ' + argMax;\n    plural = 'arguments';\n  }\n  return new StorageError(\n    StorageErrorCode.INVALID_ARGUMENT_COUNT,\n    'Invalid argument count in `' +\n      fnName +\n      '`: Expected ' +\n      countPart +\n      ' ' +\n      plural +\n      ', received ' +\n      real +\n      '.'\n  );\n}\n\nexport function appDeleted(): StorageError {\n  return new StorageError(\n    StorageErrorCode.APP_DELETED,\n    'The Firebase app was deleted.'\n  );\n}\n\n/**\n * @param name - The name of the operation that was invalid.\n *\n * @internal\n */\nexport function invalidRootOperation(name: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_ROOT_OPERATION,\n    \"The operation '\" +\n      name +\n      \"' cannot be performed on a root reference, create a non-root \" +\n      \"reference using child, such as .child('file.png').\"\n  );\n}\n\n/**\n * @param format - The format that was not valid.\n * @param message - A message describing the format violation.\n */\nexport function invalidFormat(format: string, message: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_FORMAT,\n    \"String does not match format '\" + format + \"': \" + message\n  );\n}\n\n/**\n * @param message - A message describing the internal error.\n */\nexport function unsupportedEnvironment(message: string): StorageError {\n  throw new StorageError(StorageErrorCode.UNSUPPORTED_ENVIRONMENT, message);\n}\n\n/**\n * @param message - A message describing the internal error.\n */\nexport function internalError(message: string): StorageError {\n  throw new StorageError(\n    StorageErrorCode.INTERNAL_ERROR,\n    'Internal error: ' + message\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functionality related to the parsing/composition of bucket/\n * object location.\n */\n\nimport { invalidDefaultBucket, invalidUrl } from './error';\nimport { DEFAULT_HOST } from './constants';\n\n/**\n * Firebase Storage location data.\n *\n * @internal\n */\nexport class Location {\n  private path_: string;\n\n  constructor(public readonly bucket: string, path: string) {\n    this.path_ = path;\n  }\n\n  get path(): string {\n    return this.path_;\n  }\n\n  get isRoot(): boolean {\n    return this.path.length === 0;\n  }\n\n  fullServerUrl(): string {\n    const encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  }\n\n  bucketOnlyServerUrl(): string {\n    const encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  }\n\n  static makeFromBucketSpec(bucketString: string, host: string): Location {\n    let bucketLocation;\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString, host);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw invalidDefaultBucket(bucketString);\n    }\n  }\n\n  static makeFromUrl(url: string, host: string): Location {\n    let location: Location | null = null;\n    const bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\n\n    function gsModify(loc: Location): void {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n    const gsPath = '(/(.*))?$';\n    const gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    const gsIndices = { bucket: 1, path: 3 };\n\n    function httpModify(loc: Location): void {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n    const version = 'v[A-Za-z0-9_]+';\n    const firebaseStorageHost = host.replace(/[.]/g, '\\\\.');\n    const firebaseStoragePath = '(/([^?#]*).*)?$';\n    const firebaseStorageRegExp = new RegExp(\n      `^https?://${firebaseStorageHost}/${version}/b/${bucketDomain}/o${firebaseStoragePath}`,\n      'i'\n    );\n    const firebaseStorageIndices = { bucket: 1, path: 3 };\n\n    const cloudStorageHost =\n      host === DEFAULT_HOST\n        ? '(?:storage.googleapis.com|storage.cloud.google.com)'\n        : host;\n    const cloudStoragePath = '([^?#]*)';\n    const cloudStorageRegExp = new RegExp(\n      `^https?://${cloudStorageHost}/${bucketDomain}/${cloudStoragePath}`,\n      'i'\n    );\n    const cloudStorageIndices = { bucket: 1, path: 2 };\n\n    const groups = [\n      { regex: gsRegex, indices: gsIndices, postModify: gsModify },\n      {\n        regex: firebaseStorageRegExp,\n        indices: firebaseStorageIndices,\n        postModify: httpModify\n      },\n      {\n        regex: cloudStorageRegExp,\n        indices: cloudStorageIndices,\n        postModify: httpModify\n      }\n    ];\n    for (let i = 0; i < groups.length; i++) {\n      const group = groups[i];\n      const captures = group.regex.exec(url);\n      if (captures) {\n        const bucketValue = captures[group.indices.bucket];\n        let pathValue = captures[group.indices.path];\n        if (!pathValue) {\n          pathValue = '';\n        }\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n    if (location == null) {\n      throw invalidUrl(url);\n    }\n    return location;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { StorageError } from './error';\nimport { Request } from './request';\n\n/**\n * A request whose promise always fails.\n */\nexport class FailRequest<T> implements Request<T> {\n  promise_: Promise<T>;\n\n  constructor(error: StorageError) {\n    this.promise_ = Promise.reject<T>(error);\n  }\n\n  /** @inheritDoc */\n  getPromise(): Promise<T> {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(_appDelete = false): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides a method for running a function with exponential\n * backoff.\n */\ntype id = (p1: boolean) => void;\n\nexport { id };\n\n/**\n * Accepts a callback for an action to perform (`doRequest`),\n * and then a callback for when the backoff has completed (`backoffCompleteCb`).\n * The callback sent to start requires an argument to call (`onRequestComplete`).\n * When `start` calls `doRequest`, it passes a callback for when the request has\n * completed, `onRequestComplete`. Based on this, the backoff continues, with\n * another call to `doRequest` and the above loop continues until the timeout\n * is hit, or a successful response occurs.\n * @description\n * @param doRequest Callback to perform request\n * @param backoffCompleteCb Callback to call when backoff has been completed\n */\nexport function start(\n  doRequest: (\n    onRequestComplete: (success: boolean) => void,\n    canceled: boolean\n  ) => void,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  backoffCompleteCb: (...args: any[]) => unknown,\n  timeout: number\n): id {\n  // TODO(andysoto): make this code cleaner (probably refactor into an actual\n  // type instead of a bunch of functions with state shared in the closure)\n  let waitSeconds = 1;\n  // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n  // TODO: find a way to exclude Node type definition for storage because storage only works in browser\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let retryTimeoutId: any = null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let globalTimeoutId: any = null;\n  let hitTimeout = false;\n  let cancelState = 0;\n\n  function canceled(): boolean {\n    return cancelState === 2;\n  }\n  let triggeredCallback = false;\n\n  function triggerCallback(...args: any[]): void {\n    if (!triggeredCallback) {\n      triggeredCallback = true;\n      backoffCompleteCb.apply(null, args);\n    }\n  }\n\n  function callWithDelay(millis: number): void {\n    retryTimeoutId = setTimeout(() => {\n      retryTimeoutId = null;\n      doRequest(responseHandler, canceled());\n    }, millis);\n  }\n\n  function clearGlobalTimeout(): void {\n    if (globalTimeoutId) {\n      clearTimeout(globalTimeoutId);\n    }\n  }\n\n  function responseHandler(success: boolean, ...args: any[]): void {\n    if (triggeredCallback) {\n      clearGlobalTimeout();\n      return;\n    }\n    if (success) {\n      clearGlobalTimeout();\n      triggerCallback.call(null, success, ...args);\n      return;\n    }\n    const mustStop = canceled() || hitTimeout;\n    if (mustStop) {\n      clearGlobalTimeout();\n      triggerCallback.call(null, success, ...args);\n      return;\n    }\n    if (waitSeconds < 64) {\n      /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n      waitSeconds *= 2;\n    }\n    let waitMillis;\n    if (cancelState === 1) {\n      cancelState = 2;\n      waitMillis = 0;\n    } else {\n      waitMillis = (waitSeconds + Math.random()) * 1000;\n    }\n    callWithDelay(waitMillis);\n  }\n  let stopped = false;\n\n  function stop(wasTimeout: boolean): void {\n    if (stopped) {\n      return;\n    }\n    stopped = true;\n    clearGlobalTimeout();\n    if (triggeredCallback) {\n      return;\n    }\n    if (retryTimeoutId !== null) {\n      if (!wasTimeout) {\n        cancelState = 2;\n      }\n      clearTimeout(retryTimeoutId);\n      callWithDelay(0);\n    } else {\n      if (!wasTimeout) {\n        cancelState = 1;\n      }\n    }\n  }\n  callWithDelay(0);\n  globalTimeoutId = setTimeout(() => {\n    hitTimeout = true;\n    stop(true);\n  }, timeout);\n  return stop;\n}\n\n/**\n * Stops the retry loop from repeating.\n * If the function is currently \"in between\" retries, it is invoked immediately\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\n * after the current invocation finishes iff the current invocation would have\n * triggered another retry.\n */\nexport function stop(id: id): void {\n  id(false);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isNode } from '@firebase/util';\nimport { invalidArgument } from './error';\n\nexport function isJustDef<T>(p: T | null | undefined): p is T | null {\n  return p !== void 0;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isFunction(p: unknown): p is Function {\n  return typeof p === 'function';\n}\n\nexport function isNonArrayObject(p: unknown): boolean {\n  return typeof p === 'object' && !Array.isArray(p);\n}\n\nexport function isString(p: unknown): p is string {\n  return typeof p === 'string' || p instanceof String;\n}\n\nexport function isNativeBlob(p: unknown): p is Blob {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\n\nexport function isNativeBlobDefined(): boolean {\n  // Note: The `isNode()` check can be removed when `node-fetch` adds native Blob support\n  // PR: https://github.com/node-fetch/node-fetch/pull/1664\n  return typeof Blob !== 'undefined' && !isNode();\n}\n\nexport function validateNumber(\n  argument: string,\n  minValue: number,\n  maxValue: number,\n  value: number\n): void {\n  if (value < minValue) {\n    throw invalidArgument(\n      `Invalid value for '${argument}'. Expected ${minValue} or greater.`\n    );\n  }\n  if (value > maxValue) {\n    throw invalidArgument(\n      `Invalid value for '${argument}'. Expected ${maxValue} or less.`\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functions to create and manipulate URLs for the server API.\n */\nimport { UrlParams } from './requestinfo';\n\nexport function makeUrl(\n  urlPart: string,\n  host: string,\n  protocol: string\n): string {\n  let origin = host;\n  if (protocol == null) {\n    origin = `https://${host}`;\n  }\n  return `${protocol}://${origin}/v0${urlPart}`;\n}\n\nexport function makeQueryString(params: UrlParams): string {\n  const encode = encodeURIComponent;\n  let queryPart = '?';\n  for (const key in params) {\n    if (params.hasOwnProperty(key)) {\n      const nextPart = encode(key) + '=' + encode(params[key]);\n      queryPart = queryPart + nextPart + '&';\n    }\n  }\n\n  // Chop off the extra '&' or '?' on the end\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Network headers */\nexport type Headers = Record<string, string>;\n\n/** Response type exposed by the networking APIs. */\nexport type ConnectionType =\n  | string\n  | ArrayBuffer\n  | Blob\n  | NodeJS.ReadableStream;\n\n/**\n * A lightweight wrapper around XMLHttpRequest with a\n * goog.net.XhrIo-like interface.\n *\n * You can create a new connection by invoking `newTextConnection()`,\n * `newBytesConnection()` or `newStreamConnection()`.\n */\nexport interface Connection<T extends ConnectionType> {\n  /**\n   * Sends a request to the provided URL.\n   *\n   * This method never rejects its promise. In case of encountering an error,\n   * it sets an error code internally which can be accessed by calling\n   * getErrorCode() by callers.\n   */\n  send(\n    url: string,\n    method: string,\n    body?: ArrayBufferView | Blob | string | null,\n    headers?: Headers\n  ): Promise<void>;\n\n  getErrorCode(): ErrorCode;\n\n  getStatus(): number;\n\n  getResponse(): T;\n\n  getErrorText(): string;\n\n  /**\n   * Abort the request.\n   */\n  abort(): void;\n\n  getResponseHeader(header: string): string | null;\n\n  addUploadProgressListener(listener: (p1: ProgressEvent) => void): void;\n\n  removeUploadProgressListener(listener: (p1: ProgressEvent) => void): void;\n}\n\n/**\n * Error codes for requests made by the the XhrIo wrapper.\n */\nexport enum ErrorCode {\n  NO_ERROR = 0,\n  NETWORK_ERROR = 1,\n  ABORT = 2\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Checks the status code to see if the action should be retried.\n *\n * @param status Current HTTP status code returned by server.\n * @param additionalRetryCodes additional retry codes to check against\n */\nexport function isRetryStatusCode(\n  status: number,\n  additionalRetryCodes: number[]\n): boolean {\n  // The codes for which to retry came from this page:\n  // https://cloud.google.com/storage/docs/exponential-backoff\n  const isFiveHundredCode = status >= 500 && status < 600;\n  const extraRetryCodes = [\n    // Request Timeout: web server didn't receive full request in time.\n    408,\n    // Too Many Requests: you're getting rate-limited, basically.\n    429\n  ];\n  const isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\n  const isAdditionalRetryCode = additionalRetryCodes.indexOf(status) !== -1;\n  return isFiveHundredCode || isExtraRetryCode || isAdditionalRetryCode;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines methods used to actually send HTTP requests from\n * abstract representations.\n */\n\nimport { id as backoffId, start, stop } from './backoff';\nimport { appDeleted, canceled, retryLimitExceeded, unknown } from './error';\nimport { ErrorHandler, RequestHandler, RequestInfo } from './requestinfo';\nimport { isJustDef } from './type';\nimport { makeQueryString } from './url';\nimport { Connection, ErrorCode, Headers, ConnectionType } from './connection';\nimport { isRetryStatusCode } from './utils';\n\nexport interface Request<T> {\n  getPromise(): Promise<T>;\n\n  /**\n   * Cancels the request. IMPORTANT: the promise may still be resolved with an\n   * appropriate value (if the request is finished before you call this method,\n   * but the promise has not yet been resolved), so don't just assume it will be\n   * rejected if you call this function.\n   * @param appDelete - True if the cancelation came from the app being deleted.\n   */\n  cancel(appDelete?: boolean): void;\n}\n\n/**\n * Handles network logic for all Storage Requests, including error reporting and\n * retries with backoff.\n *\n * @param I - the type of the backend's network response.\n * @param - O the output type used by the rest of the SDK. The conversion\n * happens in the specified `callback_`.\n */\nclass NetworkRequest<I extends ConnectionType, O> implements Request<O> {\n  private pendingConnection_: Connection<I> | null = null;\n  private backoffId_: backoffId | null = null;\n  private resolve_!: (value?: O | PromiseLike<O>) => void;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private reject_!: (reason?: any) => void;\n  private canceled_: boolean = false;\n  private appDelete_: boolean = false;\n  private promise_: Promise<O>;\n\n  constructor(\n    private url_: string,\n    private method_: string,\n    private headers_: Headers,\n    private body_: string | Blob | Uint8Array | null,\n    private successCodes_: number[],\n    private additionalRetryCodes_: number[],\n    private callback_: RequestHandler<I, O>,\n    private errorCallback_: ErrorHandler | null,\n    private timeout_: number,\n    private progressCallback_: ((p1: number, p2: number) => void) | null,\n    private connectionFactory_: () => Connection<I>,\n    private retry = true\n  ) {\n    this.promise_ = new Promise((resolve, reject) => {\n      this.resolve_ = resolve as (value?: O | PromiseLike<O>) => void;\n      this.reject_ = reject;\n      this.start_();\n    });\n  }\n\n  /**\n   * Actually starts the retry loop.\n   */\n  private start_(): void {\n    const doTheRequest: (\n      backoffCallback: (success: boolean, ...p2: unknown[]) => void,\n      canceled: boolean\n    ) => void = (backoffCallback, canceled) => {\n      if (canceled) {\n        backoffCallback(false, new RequestEndStatus(false, null, true));\n        return;\n      }\n      const connection = this.connectionFactory_();\n      this.pendingConnection_ = connection;\n\n      const progressListener: (\n        progressEvent: ProgressEvent\n      ) => void = progressEvent => {\n        const loaded = progressEvent.loaded;\n        const total = progressEvent.lengthComputable ? progressEvent.total : -1;\n        if (this.progressCallback_ !== null) {\n          this.progressCallback_(loaded, total);\n        }\n      };\n      if (this.progressCallback_ !== null) {\n        connection.addUploadProgressListener(progressListener);\n      }\n\n      // connection.send() never rejects, so we don't need to have a error handler or use catch on the returned promise.\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      connection\n        .send(this.url_, this.method_, this.body_, this.headers_)\n        .then(() => {\n          if (this.progressCallback_ !== null) {\n            connection.removeUploadProgressListener(progressListener);\n          }\n          this.pendingConnection_ = null;\n          const hitServer = connection.getErrorCode() === ErrorCode.NO_ERROR;\n          const status = connection.getStatus();\n          if (\n            !hitServer ||\n            (isRetryStatusCode(status, this.additionalRetryCodes_) &&\n              this.retry)\n          ) {\n            const wasCanceled = connection.getErrorCode() === ErrorCode.ABORT;\n            backoffCallback(\n              false,\n              new RequestEndStatus(false, null, wasCanceled)\n            );\n            return;\n          }\n          const successCode = this.successCodes_.indexOf(status) !== -1;\n          backoffCallback(true, new RequestEndStatus(successCode, connection));\n        });\n    };\n\n    /**\n     * @param requestWentThrough - True if the request eventually went\n     *     through, false if it hit the retry limit or was canceled.\n     */\n    const backoffDone: (\n      requestWentThrough: boolean,\n      status: RequestEndStatus<I>\n    ) => void = (requestWentThrough, status) => {\n      const resolve = this.resolve_;\n      const reject = this.reject_;\n      const connection = status.connection as Connection<I>;\n      if (status.wasSuccessCode) {\n        try {\n          const result = this.callback_(connection, connection.getResponse());\n          if (isJustDef(result)) {\n            resolve(result);\n          } else {\n            resolve();\n          }\n        } catch (e) {\n          reject(e);\n        }\n      } else {\n        if (connection !== null) {\n          const err = unknown();\n          err.serverResponse = connection.getErrorText();\n          if (this.errorCallback_) {\n            reject(this.errorCallback_(connection, err));\n          } else {\n            reject(err);\n          }\n        } else {\n          if (status.canceled) {\n            const err = this.appDelete_ ? appDeleted() : canceled();\n            reject(err);\n          } else {\n            const err = retryLimitExceeded();\n            reject(err);\n          }\n        }\n      }\n    };\n    if (this.canceled_) {\n      backoffDone(false, new RequestEndStatus(false, null, true));\n    } else {\n      this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\n    }\n  }\n\n  /** @inheritDoc */\n  getPromise(): Promise<O> {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(appDelete?: boolean): void {\n    this.canceled_ = true;\n    this.appDelete_ = appDelete || false;\n    if (this.backoffId_ !== null) {\n      stop(this.backoffId_);\n    }\n    if (this.pendingConnection_ !== null) {\n      this.pendingConnection_.abort();\n    }\n  }\n}\n\n/**\n * A collection of information about the result of a network request.\n * @param opt_canceled - Defaults to false.\n */\nexport class RequestEndStatus<I extends ConnectionType> {\n  /**\n   * True if the request was canceled.\n   */\n  canceled: boolean;\n\n  constructor(\n    public wasSuccessCode: boolean,\n    public connection: Connection<I> | null,\n    canceled?: boolean\n  ) {\n    this.canceled = !!canceled;\n  }\n}\n\nexport function addAuthHeader_(\n  headers: Headers,\n  authToken: string | null\n): void {\n  if (authToken !== null && authToken.length > 0) {\n    headers['Authorization'] = 'Firebase ' + authToken;\n  }\n}\n\nexport function addVersionHeader_(\n  headers: Headers,\n  firebaseVersion?: string\n): void {\n  headers['X-Firebase-Storage-Version'] =\n    'webjs/' + (firebaseVersion ?? 'AppManager');\n}\n\nexport function addGmpidHeader_(headers: Headers, appId: string | null): void {\n  if (appId) {\n    headers['X-Firebase-GMPID'] = appId;\n  }\n}\n\nexport function addAppCheckHeader_(\n  headers: Headers,\n  appCheckToken: string | null\n): void {\n  if (appCheckToken !== null) {\n    headers['X-Firebase-AppCheck'] = appCheckToken;\n  }\n}\n\nexport function makeRequest<I extends ConnectionType, O>(\n  requestInfo: RequestInfo<I, O>,\n  appId: string | null,\n  authToken: string | null,\n  appCheckToken: string | null,\n  requestFactory: () => Connection<I>,\n  firebaseVersion?: string,\n  retry = true\n): Request<O> {\n  const queryPart = makeQueryString(requestInfo.urlParams);\n  const url = requestInfo.url + queryPart;\n  const headers = Object.assign({}, requestInfo.headers);\n  addGmpidHeader_(headers, appId);\n  addAuthHeader_(headers, authToken);\n  addVersionHeader_(headers, firebaseVersion);\n  addAppCheckHeader_(headers, appCheckToken);\n  return new NetworkRequest<I, O>(\n    url,\n    requestInfo.method,\n    headers,\n    requestInfo.body,\n    requestInfo.successCodes,\n    requestInfo.additionalRetryCodes,\n    requestInfo.handler,\n    requestInfo.errorHandler,\n    requestInfo.timeout,\n    requestInfo.progressCallback,\n    requestFactory,\n    retry\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Some methods copied from goog.fs.\n * We don't include goog.fs because it pulls in a bunch of Deferred code that\n * bloats the size of the released binary.\n */\nimport { isNativeBlobDefined } from './type';\nimport { StorageErrorCode, StorageError } from './error';\n\nfunction getBlobBuilder(): typeof IBlobBuilder | undefined {\n  if (typeof BlobBuilder !== 'undefined') {\n    return BlobBuilder;\n  } else if (typeof WebKitBlobBuilder !== 'undefined') {\n    return WebKitBlobBuilder;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Concatenates one or more values together and converts them to a Blob.\n *\n * @param args The values that will make up the resulting blob.\n * @return The blob.\n */\nexport function getBlob(...args: Array<string | Blob | ArrayBuffer>): Blob {\n  const BlobBuilder = getBlobBuilder();\n  if (BlobBuilder !== undefined) {\n    const bb = new BlobBuilder();\n    for (let i = 0; i < args.length; i++) {\n      bb.append(args[i]);\n    }\n    return bb.getBlob();\n  } else {\n    if (isNativeBlobDefined()) {\n      return new Blob(args);\n    } else {\n      throw new StorageError(\n        StorageErrorCode.UNSUPPORTED_ENVIRONMENT,\n        \"This browser doesn't seem to support creating Blobs\"\n      );\n    }\n  }\n}\n\n/**\n * Slices the blob. The returned blob contains data from the start byte\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\n *\n * @param blob The blob to be sliced.\n * @param start Index of the starting byte.\n * @param end Index of the ending byte.\n * @return The blob slice or null if not supported.\n */\nexport function sliceBlob(blob: Blob, start: number, end: number): Blob | null {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  } else if (blob.mozSlice) {\n    return blob.mozSlice(start, end);\n  } else if (blob.slice) {\n    return blob.slice(start, end);\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { missingPolyFill } from '../../implementation/error';\n\n/** Converts a Base64 encoded string to a binary string. */\nexport function decodeBase64(encoded: string): string {\n  if (typeof atob === 'undefined') {\n    throw missingPolyFill('base-64');\n  }\n  return atob(encoded);\n}\n\nexport function decodeUint8Array(data: Uint8Array): string {\n  return new TextDecoder().decode(data);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { unknown, invalidFormat } from './error';\nimport { decodeBase64 } from '../platform/base64';\n\n/**\n * An enumeration of the possible string formats for upload.\n * @public\n */\nexport type StringFormat = typeof StringFormat[keyof typeof StringFormat];\n/**\n * An enumeration of the possible string formats for upload.\n * @public\n */\nexport const StringFormat = {\n  /**\n   * Indicates the string should be interpreted \"raw\", that is, as normal text.\n   * The string will be interpreted as UTF-16, then uploaded as a UTF-8 byte\n   * sequence.\n   * Example: The string 'Hello! \\\\ud83d\\\\ude0a' becomes the byte sequence\n   * 48 65 6c 6c 6f 21 20 f0 9f 98 8a\n   */\n  RAW: 'raw',\n  /**\n   * Indicates the string should be interpreted as base64-encoded data.\n   * Padding characters (trailing '='s) are optional.\n   * Example: The string 'rWmO++E6t7/rlw==' becomes the byte sequence\n   * ad 69 8e fb e1 3a b7 bf eb 97\n   */\n  BASE64: 'base64',\n  /**\n   * Indicates the string should be interpreted as base64url-encoded data.\n   * Padding characters (trailing '='s) are optional.\n   * Example: The string 'rWmO--E6t7_rlw==' becomes the byte sequence\n   * ad 69 8e fb e1 3a b7 bf eb 97\n   */\n  BASE64URL: 'base64url',\n  /**\n   * Indicates the string is a data URL, such as one obtained from\n   * canvas.toDataURL().\n   * Example: the string 'data:application/octet-stream;base64,aaaa'\n   * becomes the byte sequence\n   * 69 a6 9a\n   * (the content-type \"application/octet-stream\" is also applied, but can\n   * be overridden in the metadata object).\n   */\n  DATA_URL: 'data_url'\n} as const;\n\nexport class StringData {\n  contentType: string | null;\n\n  constructor(public data: Uint8Array, contentType?: string | null) {\n    this.contentType = contentType || null;\n  }\n}\n\n/**\n * @internal\n */\nexport function dataFromString(\n  format: StringFormat,\n  stringData: string\n): StringData {\n  switch (format) {\n    case StringFormat.RAW:\n      return new StringData(utf8Bytes_(stringData));\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n      return new StringData(base64Bytes_(format, stringData));\n    case StringFormat.DATA_URL:\n      return new StringData(\n        dataURLBytes_(stringData),\n        dataURLContentType_(stringData)\n      );\n    default:\n    // do nothing\n  }\n\n  // assert(false);\n  throw unknown();\n}\n\nexport function utf8Bytes_(value: string): Uint8Array {\n  const b: number[] = [];\n  for (let i = 0; i < value.length; i++) {\n    let c = value.charCodeAt(i);\n    if (c <= 127) {\n      b.push(c);\n    } else {\n      if (c <= 2047) {\n        b.push(192 | (c >> 6), 128 | (c & 63));\n      } else {\n        if ((c & 64512) === 55296) {\n          // The start of a surrogate pair.\n          const valid =\n            i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\n          if (!valid) {\n            // The second surrogate wasn't there.\n            b.push(239, 191, 189);\n          } else {\n            const hi = c;\n            const lo = value.charCodeAt(++i);\n            c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\n            b.push(\n              240 | (c >> 18),\n              128 | ((c >> 12) & 63),\n              128 | ((c >> 6) & 63),\n              128 | (c & 63)\n            );\n          }\n        } else {\n          if ((c & 64512) === 56320) {\n            // Invalid low surrogate.\n            b.push(239, 191, 189);\n          } else {\n            b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\n          }\n        }\n      }\n    }\n  }\n  return new Uint8Array(b);\n}\n\nexport function percentEncodedBytes_(value: string): Uint8Array {\n  let decoded;\n  try {\n    decoded = decodeURIComponent(value);\n  } catch (e) {\n    throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\n  }\n  return utf8Bytes_(decoded);\n}\n\nexport function base64Bytes_(format: StringFormat, value: string): Uint8Array {\n  switch (format) {\n    case StringFormat.BASE64: {\n      const hasMinus = value.indexOf('-') !== -1;\n      const hasUnder = value.indexOf('_') !== -1;\n      if (hasMinus || hasUnder) {\n        const invalidChar = hasMinus ? '-' : '_';\n        throw invalidFormat(\n          format,\n          \"Invalid character '\" +\n            invalidChar +\n            \"' found: is it base64url encoded?\"\n        );\n      }\n      break;\n    }\n    case StringFormat.BASE64URL: {\n      const hasPlus = value.indexOf('+') !== -1;\n      const hasSlash = value.indexOf('/') !== -1;\n      if (hasPlus || hasSlash) {\n        const invalidChar = hasPlus ? '+' : '/';\n        throw invalidFormat(\n          format,\n          \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\"\n        );\n      }\n      value = value.replace(/-/g, '+').replace(/_/g, '/');\n      break;\n    }\n    default:\n    // do nothing\n  }\n  let bytes;\n  try {\n    bytes = decodeBase64(value);\n  } catch (e) {\n    if ((e as Error).message.includes('polyfill')) {\n      throw e;\n    }\n    throw invalidFormat(format, 'Invalid character found');\n  }\n  const array = new Uint8Array(bytes.length);\n  for (let i = 0; i < bytes.length; i++) {\n    array[i] = bytes.charCodeAt(i);\n  }\n  return array;\n}\n\nclass DataURLParts {\n  base64: boolean = false;\n  contentType: string | null = null;\n  rest: string;\n\n  constructor(dataURL: string) {\n    const matches = dataURL.match(/^data:([^,]+)?,/);\n    if (matches === null) {\n      throw invalidFormat(\n        StringFormat.DATA_URL,\n        \"Must be formatted 'data:[<mediatype>][;base64],<data>\"\n      );\n    }\n    const middle = matches[1] || null;\n    if (middle != null) {\n      this.base64 = endsWith(middle, ';base64');\n      this.contentType = this.base64\n        ? middle.substring(0, middle.length - ';base64'.length)\n        : middle;\n    }\n    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n  }\n}\n\nexport function dataURLBytes_(dataUrl: string): Uint8Array {\n  const parts = new DataURLParts(dataUrl);\n  if (parts.base64) {\n    return base64Bytes_(StringFormat.BASE64, parts.rest);\n  } else {\n    return percentEncodedBytes_(parts.rest);\n  }\n}\n\nexport function dataURLContentType_(dataUrl: string): string | null {\n  const parts = new DataURLParts(dataUrl);\n  return parts.contentType;\n}\n\nfunction endsWith(s: string, end: string): boolean {\n  const longEnough = s.length >= end.length;\n  if (!longEnough) {\n    return false;\n  }\n\n  return s.substring(s.length - end.length) === end;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Provides a Blob-like wrapper for various binary types (including the\n * native Blob type). This makes it possible to upload types like ArrayBuffers,\n * making uploads possible in environments without the native Blob type.\n */\nimport { sliceBlob, getBlob } from './fs';\nimport { StringFormat, dataFromString } from './string';\nimport { isNativeBlob, isNativeBlobDefined, isString } from './type';\n\n/**\n * @param opt_elideCopy - If true, doesn't copy mutable input data\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\n *     modified after this blob's construction.\n *\n * @internal\n */\nexport class FbsBlob {\n  private data_!: Blob | Uint8Array;\n  private size_: number;\n  private type_: string;\n\n  constructor(data: Blob | Uint8Array | ArrayBuffer, elideCopy?: boolean) {\n    let size: number = 0;\n    let blobType: string = '';\n    if (isNativeBlob(data)) {\n      this.data_ = data as Blob;\n      size = (data as Blob).size;\n      blobType = (data as Blob).type;\n    } else if (data instanceof ArrayBuffer) {\n      if (elideCopy) {\n        this.data_ = new Uint8Array(data);\n      } else {\n        this.data_ = new Uint8Array(data.byteLength);\n        this.data_.set(new Uint8Array(data));\n      }\n      size = this.data_.length;\n    } else if (data instanceof Uint8Array) {\n      if (elideCopy) {\n        this.data_ = data as Uint8Array;\n      } else {\n        this.data_ = new Uint8Array(data.length);\n        this.data_.set(data as Uint8Array);\n      }\n      size = data.length;\n    }\n    this.size_ = size;\n    this.type_ = blobType;\n  }\n\n  size(): number {\n    return this.size_;\n  }\n\n  type(): string {\n    return this.type_;\n  }\n\n  slice(startByte: number, endByte: number): FbsBlob | null {\n    if (isNativeBlob(this.data_)) {\n      const realBlob = this.data_ as Blob;\n      const sliced = sliceBlob(realBlob, startByte, endByte);\n      if (sliced === null) {\n        return null;\n      }\n      return new FbsBlob(sliced);\n    } else {\n      const slice = new Uint8Array(\n        (this.data_ as Uint8Array).buffer,\n        startByte,\n        endByte - startByte\n      );\n      return new FbsBlob(slice, true);\n    }\n  }\n\n  static getBlob(...args: Array<string | FbsBlob>): FbsBlob | null {\n    if (isNativeBlobDefined()) {\n      const blobby: Array<Blob | Uint8Array | string> = args.map(\n        (val: string | FbsBlob): Blob | Uint8Array | string => {\n          if (val instanceof FbsBlob) {\n            return val.data_;\n          } else {\n            return val;\n          }\n        }\n      );\n      return new FbsBlob(getBlob.apply(null, blobby));\n    } else {\n      const uint8Arrays: Uint8Array[] = args.map(\n        (val: string | FbsBlob): Uint8Array => {\n          if (isString(val)) {\n            return dataFromString(StringFormat.RAW, val as string).data;\n          } else {\n            // Blobs don't exist, so this has to be a Uint8Array.\n            return (val as FbsBlob).data_ as Uint8Array;\n          }\n        }\n      );\n      let finalLength = 0;\n      uint8Arrays.forEach((array: Uint8Array): void => {\n        finalLength += array.byteLength;\n      });\n      const merged = new Uint8Array(finalLength);\n      let index = 0;\n      uint8Arrays.forEach((array: Uint8Array) => {\n        for (let i = 0; i < array.length; i++) {\n          merged[index++] = array[i];\n        }\n      });\n      return new FbsBlob(merged, true);\n    }\n  }\n\n  uploadData(): Blob | Uint8Array {\n    return this.data_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isNonArrayObject } from './type';\n\n/**\n * Returns the Object resulting from parsing the given JSON, or null if the\n * given string does not represent a JSON object.\n */\nexport function jsonObjectOrNull(\n  s: string\n): { [name: string]: unknown } | null {\n  let obj;\n  try {\n    obj = JSON.parse(s);\n  } catch (e) {\n    return null;\n  }\n  if (isNonArrayObject(obj)) {\n    return obj;\n  } else {\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Contains helper methods for manipulating paths.\n */\n\n/**\n * @return Null if the path is already at the root.\n */\nexport function parent(path: string): string | null {\n  if (path.length === 0) {\n    return null;\n  }\n  const index = path.lastIndexOf('/');\n  if (index === -1) {\n    return '';\n  }\n  const newPath = path.slice(0, index);\n  return newPath;\n}\n\nexport function child(path: string, childPath: string): string {\n  const canonicalChildPath = childPath\n    .split('/')\n    .filter(component => component.length > 0)\n    .join('/');\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n\n/**\n * Returns the last component of a path.\n * '/foo/bar' -> 'bar'\n * '/foo/bar/baz/' -> 'baz/'\n * '/a' -> 'a'\n */\nexport function lastComponent(path: string): string {\n  const index = path.lastIndexOf('/', path.length - 2);\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Documentation for the metadata format\n */\nimport { Metadata } from '../metadata';\n\nimport { jsonObjectOrNull } from './json';\nimport { Location } from './location';\nimport { lastComponent } from './path';\nimport { isString } from './type';\nimport { makeUrl, makeQueryString } from './url';\nimport { Reference } from '../reference';\nimport { FirebaseStorageImpl } from '../service';\n\nexport function noXform_<T>(metadata: Metadata, value: T): T {\n  return value;\n}\n\nclass Mapping<T> {\n  local: string;\n  writable: boolean;\n  xform: (p1: Metadata, p2?: T) => T | undefined;\n\n  constructor(\n    public server: string,\n    local?: string | null,\n    writable?: boolean,\n    xform?: ((p1: Metadata, p2?: T) => T | undefined) | null\n  ) {\n    this.local = local || server;\n    this.writable = !!writable;\n    this.xform = xform || noXform_;\n  }\n}\ntype Mappings = Array<Mapping<string> | Mapping<number>>;\n\nexport { Mappings };\n\nlet mappings_: Mappings | null = null;\n\nexport function xformPath(fullPath: string | undefined): string | undefined {\n  if (!isString(fullPath) || fullPath.length < 2) {\n    return fullPath;\n  } else {\n    return lastComponent(fullPath);\n  }\n}\n\nexport function getMappings(): Mappings {\n  if (mappings_) {\n    return mappings_;\n  }\n  const mappings: Mappings = [];\n  mappings.push(new Mapping<string>('bucket'));\n  mappings.push(new Mapping<string>('generation'));\n  mappings.push(new Mapping<string>('metageneration'));\n  mappings.push(new Mapping<string>('name', 'fullPath', true));\n\n  function mappingsXformPath(\n    _metadata: Metadata,\n    fullPath: string | undefined\n  ): string | undefined {\n    return xformPath(fullPath);\n  }\n  const nameMapping = new Mapping<string>('name');\n  nameMapping.xform = mappingsXformPath;\n  mappings.push(nameMapping);\n\n  /**\n   * Coerces the second param to a number, if it is defined.\n   */\n  function xformSize(\n    _metadata: Metadata,\n    size?: number | string\n  ): number | undefined {\n    if (size !== undefined) {\n      return Number(size);\n    } else {\n      return size;\n    }\n  }\n  const sizeMapping = new Mapping<number>('size');\n  sizeMapping.xform = xformSize;\n  mappings.push(sizeMapping);\n  mappings.push(new Mapping<number>('timeCreated'));\n  mappings.push(new Mapping<string>('updated'));\n  mappings.push(new Mapping<string>('md5Hash', null, true));\n  mappings.push(new Mapping<string>('cacheControl', null, true));\n  mappings.push(new Mapping<string>('contentDisposition', null, true));\n  mappings.push(new Mapping<string>('contentEncoding', null, true));\n  mappings.push(new Mapping<string>('contentLanguage', null, true));\n  mappings.push(new Mapping<string>('contentType', null, true));\n  mappings.push(new Mapping<string>('metadata', 'customMetadata', true));\n  mappings_ = mappings;\n  return mappings_;\n}\n\nexport function addRef(metadata: Metadata, service: FirebaseStorageImpl): void {\n  function generateRef(): Reference {\n    const bucket: string = metadata['bucket'] as string;\n    const path: string = metadata['fullPath'] as string;\n    const loc = new Location(bucket, path);\n    return service._makeStorageReference(loc);\n  }\n  Object.defineProperty(metadata, 'ref', { get: generateRef });\n}\n\nexport function fromResource(\n  service: FirebaseStorageImpl,\n  resource: { [name: string]: unknown },\n  mappings: Mappings\n): Metadata {\n  const metadata: Metadata = {} as Metadata;\n  metadata['type'] = 'file';\n  const len = mappings.length;\n  for (let i = 0; i < len; i++) {\n    const mapping = mappings[i];\n    metadata[mapping.local] = (mapping as Mapping<unknown>).xform(\n      metadata,\n      resource[mapping.server]\n    );\n  }\n  addRef(metadata, service);\n  return metadata;\n}\n\nexport function fromResourceString(\n  service: FirebaseStorageImpl,\n  resourceString: string,\n  mappings: Mappings\n): Metadata | null {\n  const obj = jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  const resource = obj as Metadata;\n  return fromResource(service, resource, mappings);\n}\n\nexport function downloadUrlFromResourceString(\n  metadata: Metadata,\n  resourceString: string,\n  host: string,\n  protocol: string\n): string | null {\n  const obj = jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  if (!isString(obj['downloadTokens'])) {\n    // This can happen if objects are uploaded through GCS and retrieved\n    // through list, so we don't want to throw an Error.\n    return null;\n  }\n  const tokens: string = obj['downloadTokens'] as string;\n  if (tokens.length === 0) {\n    return null;\n  }\n  const encode = encodeURIComponent;\n  const tokensList = tokens.split(',');\n  const urls = tokensList.map((token: string): string => {\n    const bucket: string = metadata['bucket'] as string;\n    const path: string = metadata['fullPath'] as string;\n    const urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n    const base = makeUrl(urlPart, host, protocol);\n    const queryString = makeQueryString({\n      alt: 'media',\n      token\n    });\n    return base + queryString;\n  });\n  return urls[0];\n}\n\nexport function toResourceString(\n  metadata: Partial<Metadata>,\n  mappings: Mappings\n): string {\n  const resource: {\n    [prop: string]: unknown;\n  } = {};\n  const len = mappings.length;\n  for (let i = 0; i < len; i++) {\n    const mapping = mappings[i];\n    if (mapping.writable) {\n      resource[mapping.server] = metadata[mapping.local];\n    }\n  }\n  return JSON.stringify(resource);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Documentation for the listOptions and listResult format\n */\nimport { Location } from './location';\nimport { jsonObjectOrNull } from './json';\nimport { ListResult } from '../list';\nimport { FirebaseStorageImpl } from '../service';\n\n/**\n * Represents the simplified object metadata returned by List API.\n * Other fields are filtered because list in Firebase Rules does not grant\n * the permission to read the metadata.\n */\ninterface ListMetadataResponse {\n  name: string;\n  bucket: string;\n}\n\n/**\n * Represents the JSON response of List API.\n */\ninterface ListResultResponse {\n  prefixes: string[];\n  items: ListMetadataResponse[];\n  nextPageToken?: string;\n}\n\nconst PREFIXES_KEY = 'prefixes';\nconst ITEMS_KEY = 'items';\n\nfunction fromBackendResponse(\n  service: FirebaseStorageImpl,\n  bucket: string,\n  resource: ListResultResponse\n): ListResult {\n  const listResult: ListResult = {\n    prefixes: [],\n    items: [],\n    nextPageToken: resource['nextPageToken']\n  };\n  if (resource[PREFIXES_KEY]) {\n    for (const path of resource[PREFIXES_KEY]) {\n      const pathWithoutTrailingSlash = path.replace(/\\/$/, '');\n      const reference = service._makeStorageReference(\n        new Location(bucket, pathWithoutTrailingSlash)\n      );\n      listResult.prefixes.push(reference);\n    }\n  }\n\n  if (resource[ITEMS_KEY]) {\n    for (const item of resource[ITEMS_KEY]) {\n      const reference = service._makeStorageReference(\n        new Location(bucket, item['name'])\n      );\n      listResult.items.push(reference);\n    }\n  }\n  return listResult;\n}\n\nexport function fromResponseString(\n  service: FirebaseStorageImpl,\n  bucket: string,\n  resourceString: string\n): ListResult | null {\n  const obj = jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  const resource = obj as unknown as ListResultResponse;\n  return fromBackendResponse(service, bucket, resource);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { StorageError } from './error';\nimport { Headers, Connection, ConnectionType } from './connection';\n\n/**\n * Type for url params stored in RequestInfo.\n */\nexport interface UrlParams {\n  [name: string]: string | number;\n}\n\n/**\n * A function that converts a server response to the API type expected by the\n * SDK.\n *\n * @param I - the type of the backend's network response\n * @param O - the output response type used by the rest of the SDK.\n */\nexport type RequestHandler<I extends ConnectionType, O> = (\n  connection: Connection<I>,\n  response: I\n) => O;\n\n/** A function to handle an error. */\nexport type ErrorHandler = (\n  connection: Connection<ConnectionType>,\n  response: StorageError\n) => StorageError;\n\n/**\n * Contains a fully specified request.\n *\n * @param I - the type of the backend's network response.\n * @param O - the output response type used by the rest of the SDK.\n */\nexport class RequestInfo<I extends ConnectionType, O> {\n  urlParams: UrlParams = {};\n  headers: Headers = {};\n  body: Blob | string | Uint8Array | null = null;\n  errorHandler: ErrorHandler | null = null;\n\n  /**\n   * Called with the current number of bytes uploaded and total size (-1 if not\n   * computable) of the request body (i.e. used to report upload progress).\n   */\n  progressCallback: ((p1: number, p2: number) => void) | null = null;\n  successCodes: number[] = [200];\n  additionalRetryCodes: number[] = [];\n\n  constructor(\n    public url: string,\n    public method: string,\n    /**\n     * Returns the value with which to resolve the request's promise. Only called\n     * if the request is successful. Throw from this function to reject the\n     * returned Request's promise with the thrown error.\n     * Note: The XhrIo passed to this function may be reused after this callback\n     * returns. Do not keep a reference to it in any way.\n     */\n    public handler: RequestHandler<I, O>,\n    public timeout: number\n  ) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines methods for interacting with the network.\n */\n\nimport { Metadata } from '../metadata';\nimport { ListResult } from '../list';\nimport { FbsBlob } from './blob';\nimport {\n  StorageError,\n  cannotSliceBlob,\n  unauthenticated,\n  quotaExceeded,\n  unauthorized,\n  objectNotFound,\n  serverFileWrongSize,\n  unknown,\n  unauthorizedApp\n} from './error';\nimport { Location } from './location';\nimport {\n  Mappings,\n  fromResourceString,\n  downloadUrlFromResourceString,\n  toResourceString\n} from './metadata';\nimport { fromResponseString } from './list';\nimport { RequestInfo, UrlParams } from './requestinfo';\nimport { isString } from './type';\nimport { makeUrl } from './url';\nimport { Connection, ConnectionType } from './connection';\nimport { FirebaseStorageImpl } from '../service';\n\n/**\n * Throws the UNKNOWN StorageError if cndn is false.\n */\nexport function handlerCheck(cndn: boolean): void {\n  if (!cndn) {\n    throw unknown();\n  }\n}\n\nexport function metadataHandler(\n  service: FirebaseStorageImpl,\n  mappings: Mappings\n): (p1: Connection<string>, p2: string) => Metadata {\n  function handler(xhr: Connection<string>, text: string): Metadata {\n    const metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return metadata as Metadata;\n  }\n  return handler;\n}\n\nexport function listHandler(\n  service: FirebaseStorageImpl,\n  bucket: string\n): (p1: Connection<string>, p2: string) => ListResult {\n  function handler(xhr: Connection<string>, text: string): ListResult {\n    const listResult = fromResponseString(service, bucket, text);\n    handlerCheck(listResult !== null);\n    return listResult as ListResult;\n  }\n  return handler;\n}\n\nexport function downloadUrlHandler(\n  service: FirebaseStorageImpl,\n  mappings: Mappings\n): (p1: Connection<string>, p2: string) => string | null {\n  function handler(xhr: Connection<string>, text: string): string | null {\n    const metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return downloadUrlFromResourceString(\n      metadata as Metadata,\n      text,\n      service.host,\n      service._protocol\n    );\n  }\n  return handler;\n}\n\nexport function sharedErrorHandler(\n  location: Location\n): (p1: Connection<ConnectionType>, p2: StorageError) => StorageError {\n  function errorHandler(\n    xhr: Connection<ConnectionType>,\n    err: StorageError\n  ): StorageError {\n    let newErr: StorageError;\n    if (xhr.getStatus() === 401) {\n      if (\n        // This exact message string is the only consistent part of the\n        // server's error response that identifies it as an App Check error.\n        xhr.getErrorText().includes('Firebase App Check token is invalid')\n      ) {\n        newErr = unauthorizedApp();\n      } else {\n        newErr = unauthenticated();\n      }\n    } else {\n      if (xhr.getStatus() === 402) {\n        newErr = quotaExceeded(location.bucket);\n      } else {\n        if (xhr.getStatus() === 403) {\n          newErr = unauthorized(location.path);\n        } else {\n          newErr = err;\n        }\n      }\n    }\n    newErr.status = xhr.getStatus();\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n  return errorHandler;\n}\n\nexport function objectErrorHandler(\n  location: Location\n): (p1: Connection<ConnectionType>, p2: StorageError) => StorageError {\n  const shared = sharedErrorHandler(location);\n\n  function errorHandler(\n    xhr: Connection<ConnectionType>,\n    err: StorageError\n  ): StorageError {\n    let newErr = shared(xhr, err);\n    if (xhr.getStatus() === 404) {\n      newErr = objectNotFound(location.path);\n    }\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n  return errorHandler;\n}\n\nexport function getMetadata(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings\n): RequestInfo<string, Metadata> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function list(\n  service: FirebaseStorageImpl,\n  location: Location,\n  delimiter?: string,\n  pageToken?: string | null,\n  maxResults?: number | null\n): RequestInfo<string, ListResult> {\n  const urlParams: UrlParams = {};\n  if (location.isRoot) {\n    urlParams['prefix'] = '';\n  } else {\n    urlParams['prefix'] = location.path + '/';\n  }\n  if (delimiter && delimiter.length > 0) {\n    urlParams['delimiter'] = delimiter;\n  }\n  if (pageToken) {\n    urlParams['pageToken'] = pageToken;\n  }\n  if (maxResults) {\n    urlParams['maxResults'] = maxResults;\n  }\n  const urlPart = location.bucketOnlyServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    listHandler(service, location.bucket),\n    timeout\n  );\n  requestInfo.urlParams = urlParams;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\nexport function getBytes<I extends ConnectionType>(\n  service: FirebaseStorageImpl,\n  location: Location,\n  maxDownloadSizeBytes?: number\n): RequestInfo<I, I> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol) + '?alt=media';\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    (_: Connection<I>, data: I) => data,\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  if (maxDownloadSizeBytes !== undefined) {\n    requestInfo.headers['Range'] = `bytes=0-${maxDownloadSizeBytes}`;\n    requestInfo.successCodes = [200 /* OK */, 206 /* Partial Content */];\n  }\n  return requestInfo;\n}\n\nexport function getDownloadUrl(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings\n): RequestInfo<string, string | null> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    downloadUrlHandler(service, mappings),\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function updateMetadata(\n  service: FirebaseStorageImpl,\n  location: Location,\n  metadata: Partial<Metadata>,\n  mappings: Mappings\n): RequestInfo<string, Metadata> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'PATCH';\n  const body = toResourceString(metadata, mappings);\n  const headers = { 'Content-Type': 'application/json; charset=utf-8' };\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function deleteObject(\n  service: FirebaseStorageImpl,\n  location: Location\n): RequestInfo<string, void> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'DELETE';\n  const timeout = service.maxOperationRetryTime;\n\n  function handler(_xhr: Connection<string>, _text: string): void {}\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.successCodes = [200, 204];\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function determineContentType_(\n  metadata: Metadata | null,\n  blob: FbsBlob | null\n): string {\n  return (\n    (metadata && metadata['contentType']) ||\n    (blob && blob.type()) ||\n    'application/octet-stream'\n  );\n}\n\nexport function metadataForUpload_(\n  location: Location,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): Metadata {\n  const metadataClone = Object.assign({}, metadata);\n  metadataClone['fullPath'] = location.path;\n  metadataClone['size'] = blob.size();\n  if (!metadataClone['contentType']) {\n    metadataClone['contentType'] = determineContentType_(null, blob);\n  }\n  return metadataClone;\n}\n\n/**\n * Prepare RequestInfo for uploads as Content-Type: multipart.\n */\nexport function multipartUpload(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): RequestInfo<string, Metadata> {\n  const urlPart = location.bucketOnlyServerUrl();\n  const headers: { [prop: string]: string } = {\n    'X-Goog-Upload-Protocol': 'multipart'\n  };\n\n  function genBoundary(): string {\n    let str = '';\n    for (let i = 0; i < 2; i++) {\n      str = str + Math.random().toString().slice(2);\n    }\n    return str;\n  }\n  const boundary = genBoundary();\n  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n  const metadata_ = metadataForUpload_(location, blob, metadata);\n  const metadataString = toResourceString(metadata_, mappings);\n  const preBlobPart =\n    '--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\n    metadataString +\n    '\\r\\n--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: ' +\n    metadata_['contentType'] +\n    '\\r\\n\\r\\n';\n  const postBlobPart = '\\r\\n--' + boundary + '--';\n  const body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n  const urlParams: UrlParams = { name: metadata_['fullPath']! };\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * @param current The number of bytes that have been uploaded so far.\n * @param total The total number of bytes in the upload.\n * @param opt_finalized True if the server has finished the upload.\n * @param opt_metadata The upload metadata, should\n *     only be passed if opt_finalized is true.\n */\nexport class ResumableUploadStatus {\n  finalized: boolean;\n  metadata: Metadata | null;\n\n  constructor(\n    public current: number,\n    public total: number,\n    finalized?: boolean,\n    metadata?: Metadata | null\n  ) {\n    this.finalized = !!finalized;\n    this.metadata = metadata || null;\n  }\n}\n\nexport function checkResumeHeader_(\n  xhr: Connection<string>,\n  allowed?: string[]\n): string {\n  let status: string | null = null;\n  try {\n    status = xhr.getResponseHeader('X-Goog-Upload-Status');\n  } catch (e) {\n    handlerCheck(false);\n  }\n  const allowedStatus = allowed || ['active'];\n  handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\n  return status as string;\n}\n\nexport function createResumableUpload(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): RequestInfo<string, string> {\n  const urlPart = location.bucketOnlyServerUrl();\n  const metadataForUpload = metadataForUpload_(location, blob, metadata);\n  const urlParams: UrlParams = { name: metadataForUpload['fullPath']! };\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'POST';\n  const headers = {\n    'X-Goog-Upload-Protocol': 'resumable',\n    'X-Goog-Upload-Command': 'start',\n    'X-Goog-Upload-Header-Content-Length': `${blob.size()}`,\n    'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType']!,\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  const body = toResourceString(metadataForUpload, mappings);\n  const timeout = service.maxUploadRetryTime;\n\n  function handler(xhr: Connection<string>): string {\n    checkResumeHeader_(xhr);\n    let url;\n    try {\n      url = xhr.getResponseHeader('X-Goog-Upload-URL');\n    } catch (e) {\n      handlerCheck(false);\n    }\n    handlerCheck(isString(url));\n    return url as string;\n  }\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n */\nexport function getResumableUploadStatus(\n  service: FirebaseStorageImpl,\n  location: Location,\n  url: string,\n  blob: FbsBlob\n): RequestInfo<string, ResumableUploadStatus> {\n  const headers = { 'X-Goog-Upload-Command': 'query' };\n\n  function handler(xhr: Connection<string>): ResumableUploadStatus {\n    const status = checkResumeHeader_(xhr, ['active', 'final']);\n    let sizeString: string | null = null;\n    try {\n      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    if (!sizeString) {\n      // null or empty string\n      handlerCheck(false);\n    }\n\n    const size = Number(sizeString);\n    handlerCheck(!isNaN(size));\n    return new ResumableUploadStatus(size, blob.size(), status === 'final');\n  }\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * Any uploads via the resumable upload API must transfer a number of bytes\n * that is a multiple of this number.\n */\nexport const RESUMABLE_UPLOAD_CHUNK_SIZE: number = 256 * 1024;\n\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n * @param chunkSize Number of bytes to upload.\n * @param status The previous status.\n *     If not passed or null, we start from the beginning.\n * @throws fbs.Error If the upload is already complete, the passed in status\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\n *     for upload.\n */\nexport function continueResumableUpload(\n  location: Location,\n  service: FirebaseStorageImpl,\n  url: string,\n  blob: FbsBlob,\n  chunkSize: number,\n  mappings: Mappings,\n  status?: ResumableUploadStatus | null,\n  progressCallback?: ((p1: number, p2: number) => void) | null\n): RequestInfo<string, ResumableUploadStatus> {\n  // TODO(andysoto): standardize on internal asserts\n  // assert(!(opt_status && opt_status.finalized));\n  const status_ = new ResumableUploadStatus(0, 0);\n  if (status) {\n    status_.current = status.current;\n    status_.total = status.total;\n  } else {\n    status_.current = 0;\n    status_.total = blob.size();\n  }\n  if (blob.size() !== status_.total) {\n    throw serverFileWrongSize();\n  }\n  const bytesLeft = status_.total - status_.current;\n  let bytesToUpload = bytesLeft;\n  if (chunkSize > 0) {\n    bytesToUpload = Math.min(bytesToUpload, chunkSize);\n  }\n  const startByte = status_.current;\n  const endByte = startByte + bytesToUpload;\n  let uploadCommand = '';\n  if (bytesToUpload === 0) {\n    uploadCommand = 'finalize';\n  } else if (bytesLeft === bytesToUpload) {\n    uploadCommand = 'upload, finalize';\n  } else {\n    uploadCommand = 'upload';\n  }\n  const headers = {\n    'X-Goog-Upload-Command': uploadCommand,\n    'X-Goog-Upload-Offset': `${status_.current}`\n  };\n  const body = blob.slice(startByte, endByte);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  function handler(\n    xhr: Connection<string>,\n    text: string\n  ): ResumableUploadStatus {\n    // TODO(andysoto): Verify the MD5 of each uploaded range:\n    // the 'x-range-md5' header comes back with status code 308 responses.\n    // We'll only be able to bail out though, because you can't re-upload a\n    // range that you previously uploaded.\n    const uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n    const newCurrent = status_.current + bytesToUpload;\n    const size = blob.size();\n    let metadata;\n    if (uploadStatus === 'final') {\n      metadata = metadataHandler(service, mappings)(xhr, text);\n    } else {\n      metadata = null;\n    }\n    return new ResumableUploadStatus(\n      newCurrent,\n      size,\n      uploadStatus === 'final',\n      metadata\n    );\n  }\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.progressCallback = progressCallback || null;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Enumerations used for upload tasks.\n */\n\n/**\n * An event that is triggered on a task.\n * @internal\n */\nexport type TaskEvent = string;\n\n/**\n * An event that is triggered on a task.\n * @internal\n */\nexport const TaskEvent = {\n  /**\n   * For this event,\n   * <ul>\n   *   <li>The `next` function is triggered on progress updates and when the\n   *       task is paused/resumed with an `UploadTaskSnapshot` as the first\n   *       argument.</li>\n   *   <li>The `error` function is triggered if the upload is canceled or fails\n   *       for another reason.</li>\n   *   <li>The `complete` function is triggered if the upload completes\n   *       successfully.</li>\n   * </ul>\n   */\n  STATE_CHANGED: 'state_changed'\n};\n\n/**\n * Internal enum for task state.\n */\nexport const enum InternalTaskState {\n  RUNNING = 'running',\n  PAUSING = 'pausing',\n  PAUSED = 'paused',\n  SUCCESS = 'success',\n  CANCELING = 'canceling',\n  CANCELED = 'canceled',\n  ERROR = 'error'\n}\n\n/**\n * Represents the current state of a running upload.\n * @internal\n */\nexport type TaskState = typeof TaskState[keyof typeof TaskState];\n\n// type keys = keyof TaskState\n/**\n * Represents the current state of a running upload.\n * @internal\n */\nexport const TaskState = {\n  /** The task is currently transferring data. */\n  RUNNING: 'running',\n\n  /** The task was paused by the user. */\n  PAUSED: 'paused',\n\n  /** The task completed successfully. */\n  SUCCESS: 'success',\n\n  /** The task was canceled. */\n  CANCELED: 'canceled',\n\n  /** The task failed with an error. */\n  ERROR: 'error'\n} as const;\n\nexport function taskStateFromInternalTaskState(\n  state: InternalTaskState\n): TaskState {\n  switch (state) {\n    case InternalTaskState.RUNNING:\n    case InternalTaskState.PAUSING:\n    case InternalTaskState.CANCELING:\n      return TaskState.RUNNING;\n    case InternalTaskState.PAUSED:\n      return TaskState.PAUSED;\n    case InternalTaskState.SUCCESS:\n      return TaskState.SUCCESS;\n    case InternalTaskState.CANCELED:\n      return TaskState.CANCELED;\n    case InternalTaskState.ERROR:\n      return TaskState.ERROR;\n    default:\n      // TODO(andysoto): assert(false);\n      return TaskState.ERROR;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isFunction } from './type';\nimport { StorageError } from './error';\n\n/**\n * Function that is called once for each value in a stream of values.\n */\nexport type NextFn<T> = (value: T) => void;\n\n/**\n * A function that is called with a `StorageError`\n * if the event stream ends due to an error.\n */\nexport type ErrorFn = (error: StorageError) => void;\n\n/**\n * A function that is called if the event stream ends normally.\n */\nexport type CompleteFn = () => void;\n\n/**\n * Unsubscribes from a stream.\n */\nexport type Unsubscribe = () => void;\n\n/**\n * An observer identical to the `Observer` defined in packages/util except the\n * error passed into the ErrorFn is specifically a `StorageError`.\n */\nexport interface StorageObserver<T> {\n  /**\n   * Function that is called once for each value in the event stream.\n   */\n  next?: NextFn<T>;\n  /**\n   * A function that is called with a `StorageError`\n   * if the event stream ends due to an error.\n   */\n  error?: ErrorFn;\n  /**\n   * A function that is called if the event stream ends normally.\n   */\n  complete?: CompleteFn;\n}\n\n/**\n * Subscribes to an event stream.\n */\nexport type Subscribe<T> = (\n  next?: NextFn<T> | StorageObserver<T>,\n  error?: ErrorFn,\n  complete?: CompleteFn\n) => Unsubscribe;\n\nexport class Observer<T> implements StorageObserver<T> {\n  next?: NextFn<T>;\n  error?: ErrorFn;\n  complete?: CompleteFn;\n\n  constructor(\n    nextOrObserver?: NextFn<T> | StorageObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ) {\n    const asFunctions =\n      isFunction(nextOrObserver) || error != null || complete != null;\n    if (asFunctions) {\n      this.next = nextOrObserver as NextFn<T>;\n      this.error = error ?? undefined;\n      this.complete = complete ?? undefined;\n    } else {\n      const observer = nextOrObserver as {\n        next?: NextFn<T>;\n        error?: ErrorFn;\n        complete?: CompleteFn;\n      };\n      this.next = observer.next;\n      this.error = observer.error;\n      this.complete = observer.complete;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a function that invokes f with its arguments asynchronously as a\n * microtask, i.e. as soon as possible after the current script returns back\n * into browser code.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(f: Function): Function {\n  return (...argsToForward: unknown[]) => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    Promise.resolve().then(() => f(...argsToForward));\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Connection,\n  ConnectionType,\n  ErrorCode,\n  Headers\n} from '../../implementation/connection';\nimport { internalError } from '../../implementation/error';\n\n/** An override for the text-based Connection. Used in tests. */\nlet textFactoryOverride: (() => Connection<string>) | null = null;\n\n/**\n * Network layer for browsers. We use this instead of goog.net.XhrIo because\n * goog.net.XhrIo is hyuuuuge and doesn't work in React Native on Android.\n */\nabstract class XhrConnection<T extends ConnectionType>\n  implements Connection<T>\n{\n  protected xhr_: XMLHttpRequest;\n  private errorCode_: ErrorCode;\n  private sendPromise_: Promise<void>;\n  protected sent_: boolean = false;\n\n  constructor() {\n    this.xhr_ = new XMLHttpRequest();\n    this.initXhr();\n    this.errorCode_ = ErrorCode.NO_ERROR;\n    this.sendPromise_ = new Promise(resolve => {\n      this.xhr_.addEventListener('abort', () => {\n        this.errorCode_ = ErrorCode.ABORT;\n        resolve();\n      });\n      this.xhr_.addEventListener('error', () => {\n        this.errorCode_ = ErrorCode.NETWORK_ERROR;\n        resolve();\n      });\n      this.xhr_.addEventListener('load', () => {\n        resolve();\n      });\n    });\n  }\n\n  abstract initXhr(): void;\n\n  send(\n    url: string,\n    method: string,\n    body?: ArrayBufferView | Blob | string,\n    headers?: Headers\n  ): Promise<void> {\n    if (this.sent_) {\n      throw internalError('cannot .send() more than once');\n    }\n    this.sent_ = true;\n    this.xhr_.open(method, url, true);\n    if (headers !== undefined) {\n      for (const key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          this.xhr_.setRequestHeader(key, headers[key].toString());\n        }\n      }\n    }\n    if (body !== undefined) {\n      this.xhr_.send(body);\n    } else {\n      this.xhr_.send();\n    }\n    return this.sendPromise_;\n  }\n\n  getErrorCode(): ErrorCode {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorCode() before sending');\n    }\n    return this.errorCode_;\n  }\n\n  getStatus(): number {\n    if (!this.sent_) {\n      throw internalError('cannot .getStatus() before sending');\n    }\n    try {\n      return this.xhr_.status;\n    } catch (e) {\n      return -1;\n    }\n  }\n\n  getResponse(): T {\n    if (!this.sent_) {\n      throw internalError('cannot .getResponse() before sending');\n    }\n    return this.xhr_.response;\n  }\n\n  getErrorText(): string {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorText() before sending');\n    }\n    return this.xhr_.statusText;\n  }\n\n  /** Aborts the request. */\n  abort(): void {\n    this.xhr_.abort();\n  }\n\n  getResponseHeader(header: string): string | null {\n    return this.xhr_.getResponseHeader(header);\n  }\n\n  addUploadProgressListener(listener: (p1: ProgressEvent) => void): void {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.addEventListener('progress', listener);\n    }\n  }\n\n  removeUploadProgressListener(listener: (p1: ProgressEvent) => void): void {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.removeEventListener('progress', listener);\n    }\n  }\n}\n\nexport class XhrTextConnection extends XhrConnection<string> {\n  initXhr(): void {\n    this.xhr_.responseType = 'text';\n  }\n}\n\nexport function newTextConnection(): Connection<string> {\n  return textFactoryOverride ? textFactoryOverride() : new XhrTextConnection();\n}\n\nexport class XhrBytesConnection extends XhrConnection<ArrayBuffer> {\n  private data_?: ArrayBuffer;\n\n  initXhr(): void {\n    this.xhr_.responseType = 'arraybuffer';\n  }\n}\n\nexport function newBytesConnection(): Connection<ArrayBuffer> {\n  return new XhrBytesConnection();\n}\n\nexport class XhrBlobConnection extends XhrConnection<Blob> {\n  initXhr(): void {\n    this.xhr_.responseType = 'blob';\n  }\n}\n\nexport function newBlobConnection(): Connection<Blob> {\n  return new XhrBlobConnection();\n}\n\nexport function newStreamConnection(): Connection<NodeJS.ReadableStream> {\n  throw new Error('Streams are only supported on Node');\n}\n\nexport function injectTestConnection(\n  factory: (() => Connection<string>) | null\n): void {\n  textFactoryOverride = factory;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Defines types for interacting with blob transfer tasks.\n */\n\nimport { FbsBlob } from './implementation/blob';\nimport {\n  canceled,\n  StorageErrorCode,\n  StorageError,\n  retryLimitExceeded\n} from './implementation/error';\nimport {\n  InternalTaskState,\n  TaskEvent,\n  TaskState,\n  taskStateFromInternalTaskState\n} from './implementation/taskenums';\nimport { Metadata } from './metadata';\nimport {\n  Observer,\n  Subscribe,\n  Unsubscribe,\n  StorageObserver as StorageObserverInternal,\n  NextFn\n} from './implementation/observer';\nimport { Request } from './implementation/request';\nimport { UploadTaskSnapshot, StorageObserver } from './public-types';\nimport { async as fbsAsync } from './implementation/async';\nimport { Mappings, getMappings } from './implementation/metadata';\nimport {\n  createResumableUpload,\n  getResumableUploadStatus,\n  RESUMABLE_UPLOAD_CHUNK_SIZE,\n  ResumableUploadStatus,\n  continueResumableUpload,\n  getMetadata,\n  multipartUpload\n} from './implementation/requests';\nimport { Reference } from './reference';\nimport { newTextConnection } from './platform/connection';\nimport { isRetryStatusCode } from './implementation/utils';\nimport { CompleteFn } from '@firebase/util';\nimport { DEFAULT_MIN_SLEEP_TIME_MILLIS } from './implementation/constants';\n\n/**\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\n * upload and manage callbacks for various events.\n * @internal\n */\nexport class UploadTask {\n  private _ref: Reference;\n  /**\n   * The data to be uploaded.\n   */\n  _blob: FbsBlob;\n  /**\n   * Metadata related to the upload.\n   */\n  _metadata: Metadata | null;\n  private _mappings: Mappings;\n  /**\n   * Number of bytes transferred so far.\n   */\n  _transferred: number = 0;\n  private _needToFetchStatus: boolean = false;\n  private _needToFetchMetadata: boolean = false;\n  private _observers: Array<StorageObserverInternal<UploadTaskSnapshot>> = [];\n  private _resumable: boolean;\n  /**\n   * Upload state.\n   */\n  _state: InternalTaskState;\n  private _error?: StorageError = undefined;\n  private _uploadUrl?: string = undefined;\n  private _request?: Request<unknown> = undefined;\n  private _chunkMultiplier: number = 1;\n  private _errorHandler: (p1: StorageError) => void;\n  private _metadataErrorHandler: (p1: StorageError) => void;\n  private _resolve?: (p1: UploadTaskSnapshot) => void = undefined;\n  private _reject?: (p1: StorageError) => void = undefined;\n  private pendingTimeout?: ReturnType<typeof setTimeout>;\n  private _promise: Promise<UploadTaskSnapshot>;\n\n  private sleepTime: number;\n\n  private maxSleepTime: number;\n\n  isExponentialBackoffExpired(): boolean {\n    return this.sleepTime > this.maxSleepTime;\n  }\n\n  /**\n   * @param ref - The firebaseStorage.Reference object this task came\n   *     from, untyped to avoid cyclic dependencies.\n   * @param blob - The blob to upload.\n   */\n  constructor(ref: Reference, blob: FbsBlob, metadata: Metadata | null = null) {\n    this._ref = ref;\n    this._blob = blob;\n    this._metadata = metadata;\n    this._mappings = getMappings();\n    this._resumable = this._shouldDoResumable(this._blob);\n    this._state = InternalTaskState.RUNNING;\n    this._errorHandler = error => {\n      this._request = undefined;\n      this._chunkMultiplier = 1;\n      if (error._codeEquals(StorageErrorCode.CANCELED)) {\n        this._needToFetchStatus = true;\n        this.completeTransitions_();\n      } else {\n        const backoffExpired = this.isExponentialBackoffExpired();\n        if (isRetryStatusCode(error.status, [])) {\n          if (backoffExpired) {\n            error = retryLimitExceeded();\n          } else {\n            this.sleepTime = Math.max(\n              this.sleepTime * 2,\n              DEFAULT_MIN_SLEEP_TIME_MILLIS\n            );\n            this._needToFetchStatus = true;\n            this.completeTransitions_();\n            return;\n          }\n        }\n        this._error = error;\n        this._transition(InternalTaskState.ERROR);\n      }\n    };\n    this._metadataErrorHandler = error => {\n      this._request = undefined;\n      if (error._codeEquals(StorageErrorCode.CANCELED)) {\n        this.completeTransitions_();\n      } else {\n        this._error = error;\n        this._transition(InternalTaskState.ERROR);\n      }\n    };\n    this.sleepTime = 0;\n    this.maxSleepTime = this._ref.storage.maxUploadRetryTime;\n    this._promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n      this._start();\n    });\n\n    // Prevent uncaught rejections on the internal promise from bubbling out\n    // to the top level with a dummy handler.\n    this._promise.then(null, () => {});\n  }\n\n  private _makeProgressCallback(): (p1: number, p2: number) => void {\n    const sizeBefore = this._transferred;\n    return loaded => this._updateProgress(sizeBefore + loaded);\n  }\n\n  private _shouldDoResumable(blob: FbsBlob): boolean {\n    return blob.size() > 256 * 1024;\n  }\n\n  private _start(): void {\n    if (this._state !== InternalTaskState.RUNNING) {\n      // This can happen if someone pauses us in a resume callback, for example.\n      return;\n    }\n    if (this._request !== undefined) {\n      return;\n    }\n    if (this._resumable) {\n      if (this._uploadUrl === undefined) {\n        this._createResumable();\n      } else {\n        if (this._needToFetchStatus) {\n          this._fetchStatus();\n        } else {\n          if (this._needToFetchMetadata) {\n            // Happens if we miss the metadata on upload completion.\n            this._fetchMetadata();\n          } else {\n            this.pendingTimeout = setTimeout(() => {\n              this.pendingTimeout = undefined;\n              this._continueUpload();\n            }, this.sleepTime);\n          }\n        }\n      }\n    } else {\n      this._oneShotUpload();\n    }\n  }\n\n  private _resolveToken(\n    callback: (authToken: string | null, appCheckToken: string | null) => void\n  ): void {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    Promise.all([\n      this._ref.storage._getAuthToken(),\n      this._ref.storage._getAppCheckToken()\n    ]).then(([authToken, appCheckToken]) => {\n      switch (this._state) {\n        case InternalTaskState.RUNNING:\n          callback(authToken, appCheckToken);\n          break;\n        case InternalTaskState.CANCELING:\n          this._transition(InternalTaskState.CANCELED);\n          break;\n        case InternalTaskState.PAUSING:\n          this._transition(InternalTaskState.PAUSED);\n          break;\n        default:\n      }\n    });\n  }\n\n  // TODO(andysoto): assert false\n\n  private _createResumable(): void {\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = createResumableUpload(\n        this._ref.storage,\n        this._ref._location,\n        this._mappings,\n        this._blob,\n        this._metadata\n      );\n      const createRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = createRequest;\n      createRequest.getPromise().then((url: string) => {\n        this._request = undefined;\n        this._uploadUrl = url;\n        this._needToFetchStatus = false;\n        this.completeTransitions_();\n      }, this._errorHandler);\n    });\n  }\n\n  private _fetchStatus(): void {\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    const url = this._uploadUrl as string;\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = getResumableUploadStatus(\n        this._ref.storage,\n        this._ref._location,\n        url,\n        this._blob\n      );\n      const statusRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = statusRequest;\n      statusRequest.getPromise().then(status => {\n        status = status as ResumableUploadStatus;\n        this._request = undefined;\n        this._updateProgress(status.current);\n        this._needToFetchStatus = false;\n        if (status.finalized) {\n          this._needToFetchMetadata = true;\n        }\n        this.completeTransitions_();\n      }, this._errorHandler);\n    });\n  }\n\n  private _continueUpload(): void {\n    const chunkSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\n    const status = new ResumableUploadStatus(\n      this._transferred,\n      this._blob.size()\n    );\n\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    const url = this._uploadUrl as string;\n    this._resolveToken((authToken, appCheckToken) => {\n      let requestInfo;\n      try {\n        requestInfo = continueResumableUpload(\n          this._ref._location,\n          this._ref.storage,\n          url,\n          this._blob,\n          chunkSize,\n          this._mappings,\n          status,\n          this._makeProgressCallback()\n        );\n      } catch (e) {\n        this._error = e as StorageError;\n        this._transition(InternalTaskState.ERROR);\n        return;\n      }\n      const uploadRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken,\n        /*retry=*/ false // Upload requests should not be retried as each retry should be preceded by another query request. Which is handled in this file.\n      );\n      this._request = uploadRequest;\n      uploadRequest.getPromise().then((newStatus: ResumableUploadStatus) => {\n        this._increaseMultiplier();\n        this._request = undefined;\n        this._updateProgress(newStatus.current);\n        if (newStatus.finalized) {\n          this._metadata = newStatus.metadata;\n          this._transition(InternalTaskState.SUCCESS);\n        } else {\n          this.completeTransitions_();\n        }\n      }, this._errorHandler);\n    });\n  }\n\n  private _increaseMultiplier(): void {\n    const currentSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\n\n    // Max chunk size is 32M.\n    if (currentSize * 2 < 32 * 1024 * 1024) {\n      this._chunkMultiplier *= 2;\n    }\n  }\n\n  private _fetchMetadata(): void {\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = getMetadata(\n        this._ref.storage,\n        this._ref._location,\n        this._mappings\n      );\n      const metadataRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = metadataRequest;\n      metadataRequest.getPromise().then(metadata => {\n        this._request = undefined;\n        this._metadata = metadata;\n        this._transition(InternalTaskState.SUCCESS);\n      }, this._metadataErrorHandler);\n    });\n  }\n\n  private _oneShotUpload(): void {\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = multipartUpload(\n        this._ref.storage,\n        this._ref._location,\n        this._mappings,\n        this._blob,\n        this._metadata\n      );\n      const multipartRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = multipartRequest;\n      multipartRequest.getPromise().then(metadata => {\n        this._request = undefined;\n        this._metadata = metadata;\n        this._updateProgress(this._blob.size());\n        this._transition(InternalTaskState.SUCCESS);\n      }, this._errorHandler);\n    });\n  }\n\n  private _updateProgress(transferred: number): void {\n    const old = this._transferred;\n    this._transferred = transferred;\n\n    // A progress update can make the \"transferred\" value smaller (e.g. a\n    // partial upload not completed by server, after which the \"transferred\"\n    // value may reset to the value at the beginning of the request).\n    if (this._transferred !== old) {\n      this._notifyObservers();\n    }\n  }\n\n  private _transition(state: InternalTaskState): void {\n    if (this._state === state) {\n      return;\n    }\n    switch (state) {\n      case InternalTaskState.CANCELING:\n      case InternalTaskState.PAUSING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n        if (this._request !== undefined) {\n          this._request.cancel();\n        } else if (this.pendingTimeout) {\n          clearTimeout(this.pendingTimeout);\n          this.pendingTimeout = undefined;\n          this.completeTransitions_();\n        }\n        break;\n      case InternalTaskState.RUNNING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        const wasPaused = this._state === InternalTaskState.PAUSED;\n        this._state = state;\n        if (wasPaused) {\n          this._notifyObservers();\n          this._start();\n        }\n        break;\n      case InternalTaskState.PAUSED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case InternalTaskState.CANCELED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._error = canceled();\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case InternalTaskState.ERROR:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case InternalTaskState.SUCCESS:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      default: // Ignore\n    }\n  }\n\n  private completeTransitions_(): void {\n    switch (this._state) {\n      case InternalTaskState.PAUSING:\n        this._transition(InternalTaskState.PAUSED);\n        break;\n      case InternalTaskState.CANCELING:\n        this._transition(InternalTaskState.CANCELED);\n        break;\n      case InternalTaskState.RUNNING:\n        this._start();\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        break;\n    }\n  }\n\n  /**\n   * A snapshot of the current task state.\n   */\n  get snapshot(): UploadTaskSnapshot {\n    const externalState = taskStateFromInternalTaskState(this._state);\n    return {\n      bytesTransferred: this._transferred,\n      totalBytes: this._blob.size(),\n      state: externalState,\n      metadata: this._metadata!,\n      task: this,\n      ref: this._ref\n    };\n  }\n\n  /**\n   * Adds a callback for an event.\n   * @param type - The type of event to listen for.\n   * @param nextOrObserver -\n   *     The `next` function, which gets called for each item in\n   *     the event stream, or an observer object with some or all of these three\n   *     properties (`next`, `error`, `complete`).\n   * @param error - A function that gets called with a `StorageError`\n   *     if the event stream ends due to an error.\n   * @param completed - A function that gets called if the\n   *     event stream ends normally.\n   * @returns\n   *     If only the event argument is passed, returns a function you can use to\n   *     add callbacks (see the examples above). If more than just the event\n   *     argument is passed, returns a function you can call to unregister the\n   *     callbacks.\n   */\n  on(\n    type: TaskEvent,\n    nextOrObserver?:\n      | StorageObserver<UploadTaskSnapshot>\n      | null\n      | ((snapshot: UploadTaskSnapshot) => unknown),\n    error?: ((a: StorageError) => unknown) | null,\n    completed?: CompleteFn | null\n  ): Unsubscribe | Subscribe<UploadTaskSnapshot> {\n    // Note: `type` isn't being used. Its type is also incorrect. TaskEvent should not be a string.\n    const observer = new Observer(\n      (nextOrObserver as\n        | StorageObserverInternal<UploadTaskSnapshot>\n        | NextFn<UploadTaskSnapshot>) || undefined,\n      error || undefined,\n      completed || undefined\n    );\n    this._addObserver(observer);\n    return () => {\n      this._removeObserver(observer);\n    };\n  }\n\n  /**\n   * This object behaves like a Promise, and resolves with its snapshot data\n   * when the upload completes.\n   * @param onFulfilled - The fulfillment callback. Promise chaining works as normal.\n   * @param onRejected - The rejection callback.\n   */\n  then<U>(\n    onFulfilled?: ((value: UploadTaskSnapshot) => U | Promise<U>) | null,\n    onRejected?: ((error: StorageError) => U | Promise<U>) | null\n  ): Promise<U> {\n    // These casts are needed so that TypeScript can infer the types of the\n    // resulting Promise.\n    return this._promise.then<U>(\n      onFulfilled as (value: UploadTaskSnapshot) => U | Promise<U>,\n      onRejected as ((error: unknown) => Promise<never>) | null\n    );\n  }\n\n  /**\n   * Equivalent to calling `then(null, onRejected)`.\n   */\n  catch<T>(onRejected: (p1: StorageError) => T | Promise<T>): Promise<T> {\n    return this.then(null, onRejected);\n  }\n\n  /**\n   * Adds the given observer.\n   */\n  private _addObserver(observer: Observer<UploadTaskSnapshot>): void {\n    this._observers.push(observer);\n    this._notifyObserver(observer);\n  }\n\n  /**\n   * Removes the given observer.\n   */\n  private _removeObserver(observer: Observer<UploadTaskSnapshot>): void {\n    const i = this._observers.indexOf(observer);\n    if (i !== -1) {\n      this._observers.splice(i, 1);\n    }\n  }\n\n  private _notifyObservers(): void {\n    this._finishPromise();\n    const observers = this._observers.slice();\n    observers.forEach(observer => {\n      this._notifyObserver(observer);\n    });\n  }\n\n  private _finishPromise(): void {\n    if (this._resolve !== undefined) {\n      let triggered = true;\n      switch (taskStateFromInternalTaskState(this._state)) {\n        case TaskState.SUCCESS:\n          fbsAsync(this._resolve.bind(null, this.snapshot))();\n          break;\n        case TaskState.CANCELED:\n        case TaskState.ERROR:\n          const toCall = this._reject as (p1: StorageError) => void;\n          fbsAsync(toCall.bind(null, this._error as StorageError))();\n          break;\n        default:\n          triggered = false;\n          break;\n      }\n      if (triggered) {\n        this._resolve = undefined;\n        this._reject = undefined;\n      }\n    }\n  }\n\n  private _notifyObserver(observer: Observer<UploadTaskSnapshot>): void {\n    const externalState = taskStateFromInternalTaskState(this._state);\n    switch (externalState) {\n      case TaskState.RUNNING:\n      case TaskState.PAUSED:\n        if (observer.next) {\n          fbsAsync(observer.next.bind(observer, this.snapshot))();\n        }\n        break;\n      case TaskState.SUCCESS:\n        if (observer.complete) {\n          fbsAsync(observer.complete.bind(observer))();\n        }\n        break;\n      case TaskState.CANCELED:\n      case TaskState.ERROR:\n        if (observer.error) {\n          fbsAsync(\n            observer.error.bind(observer, this._error as StorageError)\n          )();\n        }\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        if (observer.error) {\n          fbsAsync(\n            observer.error.bind(observer, this._error as StorageError)\n          )();\n        }\n    }\n  }\n\n  /**\n   * Resumes a paused task. Has no effect on a currently running or failed task.\n   * @returns True if the operation took effect, false if ignored.\n   */\n  resume(): boolean {\n    const valid =\n      this._state === InternalTaskState.PAUSED ||\n      this._state === InternalTaskState.PAUSING;\n    if (valid) {\n      this._transition(InternalTaskState.RUNNING);\n    }\n    return valid;\n  }\n\n  /**\n   * Pauses a currently running task. Has no effect on a paused or failed task.\n   * @returns True if the operation took effect, false if ignored.\n   */\n  pause(): boolean {\n    const valid = this._state === InternalTaskState.RUNNING;\n    if (valid) {\n      this._transition(InternalTaskState.PAUSING);\n    }\n    return valid;\n  }\n\n  /**\n   * Cancels a currently running or paused task. Has no effect on a complete or\n   * failed task.\n   * @returns True if the operation took effect, false if ignored.\n   */\n  cancel(): boolean {\n    const valid =\n      this._state === InternalTaskState.RUNNING ||\n      this._state === InternalTaskState.PAUSING;\n    if (valid) {\n      this._transition(InternalTaskState.CANCELING);\n    }\n    return valid;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the Firebase StorageReference class.\n */\n\nimport { PassThrough, Transform, TransformOptions } from 'stream';\n\nimport { FbsBlob } from './implementation/blob';\nimport { Location } from './implementation/location';\nimport { getMappings } from './implementation/metadata';\nimport { child, lastComponent, parent } from './implementation/path';\nimport {\n  deleteObject as requestsDeleteObject,\n  getBytes,\n  getDownloadUrl as requestsGetDownloadUrl,\n  getMetadata as requestsGetMetadata,\n  list as requestsList,\n  multipartUpload,\n  updateMetadata as requestsUpdateMetadata\n} from './implementation/requests';\nimport { ListOptions, UploadResult } from './public-types';\nimport { dataFromString, StringFormat } from './implementation/string';\nimport { Metadata } from './metadata';\nimport { FirebaseStorageImpl } from './service';\nimport { ListResult } from './list';\nimport { UploadTask } from './task';\nimport { invalidRootOperation, noDownloadURL } from './implementation/error';\nimport { validateNumber } from './implementation/type';\nimport {\n  newBlobConnection,\n  newBytesConnection,\n  newStreamConnection,\n  newTextConnection\n} from './platform/connection';\n\n/**\n * Provides methods to interact with a bucket in the Firebase Storage service.\n * @internal\n * @param _location - An fbs.location, or the URL at\n *     which to base this object, in one of the following forms:\n *         gs://<bucket>/<object-path>\n *         http[s]://firebasestorage.googleapis.com/\n *                     <api-version>/b/<bucket>/o/<object-path>\n *     Any query or fragment strings will be ignored in the http[s]\n *     format. If no value is passed, the storage object will use a URL based on\n *     the project ID of the base firebase.App instance.\n */\nexport class Reference {\n  _location: Location;\n\n  constructor(\n    private _service: FirebaseStorageImpl,\n    location: string | Location\n  ) {\n    if (location instanceof Location) {\n      this._location = location;\n    } else {\n      this._location = Location.makeFromUrl(location, _service.host);\n    }\n  }\n\n  /**\n   * Returns the URL for the bucket and path this object references,\n   *     in the form gs://<bucket>/<object-path>\n   * @override\n   */\n  toString(): string {\n    return 'gs://' + this._location.bucket + '/' + this._location.path;\n  }\n\n  protected _newRef(\n    service: FirebaseStorageImpl,\n    location: Location\n  ): Reference {\n    return new Reference(service, location);\n  }\n\n  /**\n   * A reference to the root of this object's bucket.\n   */\n  get root(): Reference {\n    const location = new Location(this._location.bucket, '');\n    return this._newRef(this._service, location);\n  }\n\n  /**\n   * The name of the bucket containing this reference's object.\n   */\n  get bucket(): string {\n    return this._location.bucket;\n  }\n\n  /**\n   * The full path of this object.\n   */\n  get fullPath(): string {\n    return this._location.path;\n  }\n\n  /**\n   * The short name of this object, which is the last component of the full path.\n   * For example, if fullPath is 'full/path/image.png', name is 'image.png'.\n   */\n  get name(): string {\n    return lastComponent(this._location.path);\n  }\n\n  /**\n   * The `StorageService` instance this `StorageReference` is associated with.\n   */\n  get storage(): FirebaseStorageImpl {\n    return this._service;\n  }\n\n  /**\n   * A `StorageReference` pointing to the parent location of this `StorageReference`, or null if\n   * this reference is the root.\n   */\n  get parent(): Reference | null {\n    const newPath = parent(this._location.path);\n    if (newPath === null) {\n      return null;\n    }\n    const location = new Location(this._location.bucket, newPath);\n    return new Reference(this._service, location);\n  }\n\n  /**\n   * Utility function to throw an error in methods that do not accept a root reference.\n   */\n  _throwIfRoot(name: string): void {\n    if (this._location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  }\n}\n\n/**\n * Download the bytes at the object's location.\n * @returns A Promise containing the downloaded bytes.\n */\nexport function getBytesInternal(\n  ref: Reference,\n  maxDownloadSizeBytes?: number\n): Promise<ArrayBuffer> {\n  ref._throwIfRoot('getBytes');\n  const requestInfo = getBytes(\n    ref.storage,\n    ref._location,\n    maxDownloadSizeBytes\n  );\n  return ref.storage\n    .makeRequestWithTokens(requestInfo, newBytesConnection)\n    .then(bytes =>\n      maxDownloadSizeBytes !== undefined\n        ? // GCS may not honor the Range header for small files\n          (bytes as ArrayBuffer).slice(0, maxDownloadSizeBytes)\n        : (bytes as ArrayBuffer)\n    );\n}\n\n/**\n * Download the bytes at the object's location.\n * @returns A Promise containing the downloaded blob.\n */\nexport function getBlobInternal(\n  ref: Reference,\n  maxDownloadSizeBytes?: number\n): Promise<Blob> {\n  ref._throwIfRoot('getBlob');\n  const requestInfo = getBytes(\n    ref.storage,\n    ref._location,\n    maxDownloadSizeBytes\n  );\n  return ref.storage\n    .makeRequestWithTokens(requestInfo, newBlobConnection)\n    .then(blob =>\n      maxDownloadSizeBytes !== undefined\n        ? // GCS may not honor the Range header for small files\n          (blob as Blob).slice(0, maxDownloadSizeBytes)\n        : (blob as Blob)\n    );\n}\n\n/** Stream the bytes at the object's location. */\nexport function getStreamInternal(\n  ref: Reference,\n  maxDownloadSizeBytes?: number\n): NodeJS.ReadableStream {\n  ref._throwIfRoot('getStream');\n  const requestInfo = getBytes(\n    ref.storage,\n    ref._location,\n    maxDownloadSizeBytes\n  );\n\n  /** A transformer that passes through the first n bytes. */\n  const newMaxSizeTransform: (n: number) => TransformOptions = n => {\n    let missingBytes = n;\n    return {\n      transform(chunk, encoding, callback) {\n        // GCS may not honor the Range header for small files\n        if (chunk.length < missingBytes) {\n          this.push(chunk);\n          missingBytes -= chunk.length;\n        } else {\n          this.push(chunk.slice(0, missingBytes));\n          this.emit('end');\n        }\n        callback();\n      }\n    } as TransformOptions;\n  };\n\n  const result =\n    maxDownloadSizeBytes !== undefined\n      ? new Transform(newMaxSizeTransform(maxDownloadSizeBytes))\n      : new PassThrough();\n\n  ref.storage\n    .makeRequestWithTokens(requestInfo, newStreamConnection)\n    .then(stream => (stream as NodeJS.ReadableStream).pipe(result))\n    .catch(e => result.destroy(e));\n  return result;\n}\n\n/**\n * Uploads data to this object's location.\n * The upload is not resumable.\n *\n * @param ref - StorageReference where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the newly uploaded data.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadBytes(\n  ref: Reference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: Metadata\n): Promise<UploadResult> {\n  ref._throwIfRoot('uploadBytes');\n  const requestInfo = multipartUpload(\n    ref.storage,\n    ref._location,\n    getMappings(),\n    new FbsBlob(data, true),\n    metadata\n  );\n  return ref.storage\n    .makeRequestWithTokens(requestInfo, newTextConnection)\n    .then(finalMetadata => {\n      return {\n        metadata: finalMetadata,\n        ref\n      };\n    });\n}\n\n/**\n * Uploads data to this object's location.\n * The upload can be paused and resumed, and exposes progress updates.\n * @public\n * @param ref - StorageReference where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the newly uploaded data.\n * @returns An UploadTask\n */\nexport function uploadBytesResumable(\n  ref: Reference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: Metadata\n): UploadTask {\n  ref._throwIfRoot('uploadBytesResumable');\n  return new UploadTask(ref, new FbsBlob(data), metadata);\n}\n\n/**\n * Uploads a string to this object's location.\n * The upload is not resumable.\n * @public\n * @param ref - StorageReference where string should be uploaded.\n * @param value - The string to upload.\n * @param format - The format of the string to upload.\n * @param metadata - Metadata for the newly uploaded string.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadString(\n  ref: Reference,\n  value: string,\n  format: StringFormat = StringFormat.RAW,\n  metadata?: Metadata\n): Promise<UploadResult> {\n  ref._throwIfRoot('uploadString');\n  const data = dataFromString(format, value);\n  const metadataClone = { ...metadata } as Metadata;\n  if (metadataClone['contentType'] == null && data.contentType != null) {\n    metadataClone['contentType'] = data.contentType!;\n  }\n  return uploadBytes(ref, data.data, metadataClone);\n}\n\n/**\n * List all items (files) and prefixes (folders) under this storage reference.\n *\n * This is a helper method for calling list() repeatedly until there are\n * no more results. The default pagination size is 1000.\n *\n * Note: The results may not be consistent if objects are changed while this\n * operation is running.\n *\n * Warning: listAll may potentially consume too many resources if there are\n * too many results.\n * @public\n * @param ref - StorageReference to get list from.\n *\n * @returns A Promise that resolves with all the items and prefixes under\n *      the current storage reference. `prefixes` contains references to\n *      sub-directories and `items` contains references to objects in this\n *      folder. `nextPageToken` is never returned.\n */\nexport function listAll(ref: Reference): Promise<ListResult> {\n  const accumulator: ListResult = {\n    prefixes: [],\n    items: []\n  };\n  return listAllHelper(ref, accumulator).then(() => accumulator);\n}\n\n/**\n * Separated from listAll because async functions can't use \"arguments\".\n * @param ref\n * @param accumulator\n * @param pageToken\n */\nasync function listAllHelper(\n  ref: Reference,\n  accumulator: ListResult,\n  pageToken?: string\n): Promise<void> {\n  const opt: ListOptions = {\n    // maxResults is 1000 by default.\n    pageToken\n  };\n  const nextPage = await list(ref, opt);\n  accumulator.prefixes.push(...nextPage.prefixes);\n  accumulator.items.push(...nextPage.items);\n  if (nextPage.nextPageToken != null) {\n    await listAllHelper(ref, accumulator, nextPage.nextPageToken);\n  }\n}\n\n/**\n * List items (files) and prefixes (folders) under this storage reference.\n *\n * List API is only available for Firebase Rules Version 2.\n *\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\n * delimited folder structure.\n * Refer to GCS's List API if you want to learn more.\n *\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\n * support objects whose paths end with \"/\" or contain two consecutive\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\n * list() may fail if there are too many unsupported objects in the bucket.\n * @public\n *\n * @param ref - StorageReference to get list from.\n * @param options - See ListOptions for details.\n * @returns A Promise that resolves with the items and prefixes.\n *      `prefixes` contains references to sub-folders and `items`\n *      contains references to objects in this folder. `nextPageToken`\n *      can be used to get the rest of the results.\n */\nexport function list(\n  ref: Reference,\n  options?: ListOptions | null\n): Promise<ListResult> {\n  if (options != null) {\n    if (typeof options.maxResults === 'number') {\n      validateNumber(\n        'options.maxResults',\n        /* minValue= */ 1,\n        /* maxValue= */ 1000,\n        options.maxResults\n      );\n    }\n  }\n  const op = options || {};\n  const requestInfo = requestsList(\n    ref.storage,\n    ref._location,\n    /*delimiter= */ '/',\n    op.pageToken,\n    op.maxResults\n  );\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n\n/**\n * A `Promise` that resolves with the metadata for this object. If this\n * object doesn't exist or metadata cannot be retreived, the promise is\n * rejected.\n * @public\n * @param ref - StorageReference to get metadata from.\n */\nexport function getMetadata(ref: Reference): Promise<Metadata> {\n  ref._throwIfRoot('getMetadata');\n  const requestInfo = requestsGetMetadata(\n    ref.storage,\n    ref._location,\n    getMappings()\n  );\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n\n/**\n * Updates the metadata for this object.\n * @public\n * @param ref - StorageReference to update metadata for.\n * @param metadata - The new metadata for the object.\n *     Only values that have been explicitly set will be changed. Explicitly\n *     setting a value to null will remove the metadata.\n * @returns A `Promise` that resolves\n *     with the new metadata for this object.\n *     See `firebaseStorage.Reference.prototype.getMetadata`\n */\nexport function updateMetadata(\n  ref: Reference,\n  metadata: Partial<Metadata>\n): Promise<Metadata> {\n  ref._throwIfRoot('updateMetadata');\n  const requestInfo = requestsUpdateMetadata(\n    ref.storage,\n    ref._location,\n    metadata,\n    getMappings()\n  );\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n\n/**\n * Returns the download URL for the given Reference.\n * @public\n * @returns A `Promise` that resolves with the download\n *     URL for this object.\n */\nexport function getDownloadURL(ref: Reference): Promise<string> {\n  ref._throwIfRoot('getDownloadURL');\n  const requestInfo = requestsGetDownloadUrl(\n    ref.storage,\n    ref._location,\n    getMappings()\n  );\n  return ref.storage\n    .makeRequestWithTokens(requestInfo, newTextConnection)\n    .then(url => {\n      if (url === null) {\n        throw noDownloadURL();\n      }\n      return url;\n    });\n}\n\n/**\n * Deletes the object at this location.\n * @public\n * @param ref - StorageReference for object to delete.\n * @returns A `Promise` that resolves if the deletion succeeds.\n */\nexport function deleteObject(ref: Reference): Promise<void> {\n  ref._throwIfRoot('deleteObject');\n  const requestInfo = requestsDeleteObject(ref.storage, ref._location);\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n\n/**\n * Returns reference for object obtained by appending `childPath` to `ref`.\n *\n * @param ref - StorageReference to get child of.\n * @param childPath - Child path from provided ref.\n * @returns A reference to the object obtained by\n * appending childPath, removing any duplicate, beginning, or trailing\n * slashes.\n *\n */\nexport function _getChild(ref: Reference, childPath: string): Reference {\n  const newPath = child(ref._location.path, childPath);\n  const location = new Location(ref._location.bucket, newPath);\n  return new Reference(ref.storage, location);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Location } from './implementation/location';\nimport { FailRequest } from './implementation/failrequest';\nimport { Request, makeRequest } from './implementation/request';\nimport { RequestInfo } from './implementation/requestinfo';\nimport { Reference, _getChild } from './reference';\nimport { Provider } from '@firebase/component';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app';\nimport {\n  CONFIG_STORAGE_BUCKET_KEY,\n  DEFAULT_HOST,\n  DEFAULT_MAX_OPERATION_RETRY_TIME,\n  DEFAULT_MAX_UPLOAD_RETRY_TIME\n} from './implementation/constants';\nimport {\n  invalidArgument,\n  appDeleted,\n  noDefaultBucket\n} from './implementation/error';\nimport { validateNumber } from './implementation/type';\nimport { FirebaseStorage } from './public-types';\nimport { createMockUserToken, EmulatorMockTokenOptions } from '@firebase/util';\nimport { Connection, ConnectionType } from './implementation/connection';\n\nexport function isUrl(path?: string): boolean {\n  return /^[A-Za-z]+:\\/\\//.test(path as string);\n}\n\n/**\n * Returns a firebaseStorage.Reference for the given url.\n */\nfunction refFromURL(service: FirebaseStorageImpl, url: string): Reference {\n  return new Reference(service, url);\n}\n\n/**\n * Returns a firebaseStorage.Reference for the given path in the default\n * bucket.\n */\nfunction refFromPath(\n  ref: FirebaseStorageImpl | Reference,\n  path?: string\n): Reference {\n  if (ref instanceof FirebaseStorageImpl) {\n    const service = ref;\n    if (service._bucket == null) {\n      throw noDefaultBucket();\n    }\n    const reference = new Reference(service, service._bucket!);\n    if (path != null) {\n      return refFromPath(reference, path);\n    } else {\n      return reference;\n    }\n  } else {\n    // ref is a Reference\n    if (path !== undefined) {\n      return _getChild(ref, path);\n    } else {\n      return ref;\n    }\n  }\n}\n\n/**\n * Returns a storage Reference for the given url.\n * @param storage - `Storage` instance.\n * @param url - URL. If empty, returns root reference.\n * @public\n */\nexport function ref(storage: FirebaseStorageImpl, url?: string): Reference;\n/**\n * Returns a storage Reference for the given path in the\n * default bucket.\n * @param storageOrRef - `Storage` service or storage `Reference`.\n * @param pathOrUrlStorage - path. If empty, returns root reference (if Storage\n * instance provided) or returns same reference (if Reference provided).\n * @public\n */\nexport function ref(\n  storageOrRef: FirebaseStorageImpl | Reference,\n  path?: string\n): Reference;\nexport function ref(\n  serviceOrRef: FirebaseStorageImpl | Reference,\n  pathOrUrl?: string\n): Reference | null {\n  if (pathOrUrl && isUrl(pathOrUrl)) {\n    if (serviceOrRef instanceof FirebaseStorageImpl) {\n      return refFromURL(serviceOrRef, pathOrUrl);\n    } else {\n      throw invalidArgument(\n        'To use ref(service, url), the first argument must be a Storage instance.'\n      );\n    }\n  } else {\n    return refFromPath(serviceOrRef, pathOrUrl);\n  }\n}\n\nfunction extractBucket(\n  host: string,\n  config?: FirebaseOptions\n): Location | null {\n  const bucketString = config?.[CONFIG_STORAGE_BUCKET_KEY];\n  if (bucketString == null) {\n    return null;\n  }\n  return Location.makeFromBucketSpec(bucketString, host);\n}\n\nexport function connectStorageEmulator(\n  storage: FirebaseStorageImpl,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  storage.host = `${host}:${port}`;\n  storage._protocol = 'http';\n  const { mockUserToken } = options;\n  if (mockUserToken) {\n    storage._overrideAuthToken =\n      typeof mockUserToken === 'string'\n        ? mockUserToken\n        : createMockUserToken(mockUserToken, storage.app.options.projectId);\n  }\n}\n\n/**\n * A service that provides Firebase Storage Reference instances.\n * @param opt_url - gs:// url to a custom Storage Bucket\n *\n * @internal\n */\nexport class FirebaseStorageImpl implements FirebaseStorage {\n  _bucket: Location | null = null;\n  /**\n   * This string can be in the formats:\n   * - host\n   * - host:port\n   */\n  private _host: string = DEFAULT_HOST;\n  _protocol: string = 'https';\n  protected readonly _appId: string | null = null;\n  private readonly _requests: Set<Request<unknown>>;\n  private _deleted: boolean = false;\n  private _maxOperationRetryTime: number;\n  private _maxUploadRetryTime: number;\n  _overrideAuthToken?: string;\n\n  constructor(\n    /**\n     * FirebaseApp associated with this StorageService instance.\n     */\n    readonly app: FirebaseApp,\n    readonly _authProvider: Provider<FirebaseAuthInternalName>,\n    /**\n     * @internal\n     */\n    readonly _appCheckProvider: Provider<AppCheckInternalComponentName>,\n    /**\n     * @internal\n     */\n    readonly _url?: string,\n    readonly _firebaseVersion?: string\n  ) {\n    this._maxOperationRetryTime = DEFAULT_MAX_OPERATION_RETRY_TIME;\n    this._maxUploadRetryTime = DEFAULT_MAX_UPLOAD_RETRY_TIME;\n    this._requests = new Set();\n    if (_url != null) {\n      this._bucket = Location.makeFromBucketSpec(_url, this._host);\n    } else {\n      this._bucket = extractBucket(this._host, this.app.options);\n    }\n  }\n\n  /**\n   * The host string for this service, in the form of `host` or\n   * `host:port`.\n   */\n  get host(): string {\n    return this._host;\n  }\n\n  set host(host: string) {\n    this._host = host;\n    if (this._url != null) {\n      this._bucket = Location.makeFromBucketSpec(this._url, host);\n    } else {\n      this._bucket = extractBucket(host, this.app.options);\n    }\n  }\n\n  /**\n   * The maximum time to retry uploads in milliseconds.\n   */\n  get maxUploadRetryTime(): number {\n    return this._maxUploadRetryTime;\n  }\n\n  set maxUploadRetryTime(time: number) {\n    validateNumber(\n      'time',\n      /* minValue=*/ 0,\n      /* maxValue= */ Number.POSITIVE_INFINITY,\n      time\n    );\n    this._maxUploadRetryTime = time;\n  }\n\n  /**\n   * The maximum time to retry operations other than uploads or downloads in\n   * milliseconds.\n   */\n  get maxOperationRetryTime(): number {\n    return this._maxOperationRetryTime;\n  }\n\n  set maxOperationRetryTime(time: number) {\n    validateNumber(\n      'time',\n      /* minValue=*/ 0,\n      /* maxValue= */ Number.POSITIVE_INFINITY,\n      time\n    );\n    this._maxOperationRetryTime = time;\n  }\n\n  async _getAuthToken(): Promise<string | null> {\n    if (this._overrideAuthToken) {\n      return this._overrideAuthToken;\n    }\n    const auth = this._authProvider.getImmediate({ optional: true });\n    if (auth) {\n      const tokenData = await auth.getToken();\n      if (tokenData !== null) {\n        return tokenData.accessToken;\n      }\n    }\n    return null;\n  }\n\n  async _getAppCheckToken(): Promise<string | null> {\n    const appCheck = this._appCheckProvider.getImmediate({ optional: true });\n    if (appCheck) {\n      const result = await appCheck.getToken();\n      // TODO: What do we want to do if there is an error getting the token?\n      // Context: appCheck.getToken() will never throw even if an error happened. In the error case, a dummy token will be\n      // returned along with an error field describing the error. In general, we shouldn't care about the error condition and just use\n      // the token (actual or dummy) to send requests.\n      return result.token;\n    }\n    return null;\n  }\n\n  /**\n   * Stop running requests and prevent more from being created.\n   */\n  _delete(): Promise<void> {\n    if (!this._deleted) {\n      this._deleted = true;\n      this._requests.forEach(request => request.cancel());\n      this._requests.clear();\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Returns a new firebaseStorage.Reference object referencing this StorageService\n   * at the given Location.\n   */\n  _makeStorageReference(loc: Location): Reference {\n    return new Reference(this, loc);\n  }\n\n  /**\n   * @param requestInfo - HTTP RequestInfo object\n   * @param authToken - Firebase auth token\n   */\n  _makeRequest<I extends ConnectionType, O>(\n    requestInfo: RequestInfo<I, O>,\n    requestFactory: () => Connection<I>,\n    authToken: string | null,\n    appCheckToken: string | null,\n    retry = true\n  ): Request<O> {\n    if (!this._deleted) {\n      const request = makeRequest(\n        requestInfo,\n        this._appId,\n        authToken,\n        appCheckToken,\n        requestFactory,\n        this._firebaseVersion,\n        retry\n      );\n      this._requests.add(request);\n      // Request removes itself from set when complete.\n      request.getPromise().then(\n        () => this._requests.delete(request),\n        () => this._requests.delete(request)\n      );\n      return request;\n    } else {\n      return new FailRequest(appDeleted());\n    }\n  }\n\n  async makeRequestWithTokens<I extends ConnectionType, O>(\n    requestInfo: RequestInfo<I, O>,\n    requestFactory: () => Connection<I>\n  ): Promise<O> {\n    const [authToken, appCheckToken] = await Promise.all([\n      this._getAuthToken(),\n      this._getAppCheckToken()\n    ]);\n\n    return this._makeRequest(\n      requestInfo,\n      requestFactory,\n      authToken,\n      appCheckToken\n    ).getPromise();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Type constant for Firebase Storage.\n */\nexport const STORAGE_TYPE = 'storage';\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { _getProvider, FirebaseApp, getApp } from '@firebase/app';\n\nimport {\n  ref as refInternal,\n  FirebaseStorageImpl,\n  connectStorageEmulator as connectEmulatorInternal\n} from './service';\nimport { Provider } from '@firebase/component';\n\nimport {\n  StorageReference,\n  FirebaseStorage,\n  UploadResult,\n  ListOptions,\n  ListResult,\n  UploadTask,\n  SettableMetadata,\n  UploadMetadata,\n  FullMetadata\n} from './public-types';\nimport { Metadata as MetadataInternal } from './metadata';\nimport {\n  uploadBytes as uploadBytesInternal,\n  uploadBytesResumable as uploadBytesResumableInternal,\n  uploadString as uploadStringInternal,\n  getMetadata as getMetadataInternal,\n  updateMetadata as updateMetadataInternal,\n  list as listInternal,\n  listAll as listAllInternal,\n  getDownloadURL as getDownloadURLInternal,\n  deleteObject as deleteObjectInternal,\n  Reference,\n  _getChild as _getChildInternal,\n  getBytesInternal\n} from './reference';\nimport { STORAGE_TYPE } from './constants';\nimport {\n  EmulatorMockTokenOptions,\n  getModularInstance,\n  getDefaultEmulatorHostnameAndPort\n} from '@firebase/util';\nimport { StringFormat } from './implementation/string';\n\nexport { EmulatorMockTokenOptions } from '@firebase/util';\n\nexport { StorageError, StorageErrorCode } from './implementation/error';\n\n/**\n * Public types.\n */\nexport * from './public-types';\n\nexport { Location as _Location } from './implementation/location';\nexport { UploadTask as _UploadTask } from './task';\nexport type { Reference as _Reference } from './reference';\nexport type { FirebaseStorageImpl as _FirebaseStorageImpl } from './service';\nexport { FbsBlob as _FbsBlob } from './implementation/blob';\nexport { dataFromString as _dataFromString } from './implementation/string';\nexport {\n  invalidRootOperation as _invalidRootOperation,\n  invalidArgument as _invalidArgument\n} from './implementation/error';\nexport {\n  TaskEvent as _TaskEvent,\n  TaskState as _TaskState\n} from './implementation/taskenums';\nexport { StringFormat };\n\n/**\n * Downloads the data at the object's location. Returns an error if the object\n * is not found.\n *\n * To use this functionality, you have to whitelist your app's origin in your\n * Cloud Storage bucket. See also\n * https://cloud.google.com/storage/docs/configuring-cors\n *\n * @public\n * @param ref - StorageReference where data should be downloaded.\n * @param maxDownloadSizeBytes - If set, the maximum allowed size in bytes to\n * retrieve.\n * @returns A Promise containing the object's bytes\n */\nexport function getBytes(\n  ref: StorageReference,\n  maxDownloadSizeBytes?: number\n): Promise<ArrayBuffer> {\n  ref = getModularInstance(ref);\n  return getBytesInternal(ref as Reference, maxDownloadSizeBytes);\n}\n\n/**\n * Uploads data to this object's location.\n * The upload is not resumable.\n * @public\n * @param ref - {@link StorageReference} where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the data to upload.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadBytes(\n  ref: StorageReference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: UploadMetadata\n): Promise<UploadResult> {\n  ref = getModularInstance(ref);\n  return uploadBytesInternal(\n    ref as Reference,\n    data,\n    metadata as MetadataInternal\n  );\n}\n\n/**\n * Uploads a string to this object's location.\n * The upload is not resumable.\n * @public\n * @param ref - {@link StorageReference} where string should be uploaded.\n * @param value - The string to upload.\n * @param format - The format of the string to upload.\n * @param metadata - Metadata for the string to upload.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadString(\n  ref: StorageReference,\n  value: string,\n  format?: StringFormat,\n  metadata?: UploadMetadata\n): Promise<UploadResult> {\n  ref = getModularInstance(ref);\n  return uploadStringInternal(\n    ref as Reference,\n    value,\n    format,\n    metadata as MetadataInternal\n  );\n}\n\n/**\n * Uploads data to this object's location.\n * The upload can be paused and resumed, and exposes progress updates.\n * @public\n * @param ref - {@link StorageReference} where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the data to upload.\n * @returns An UploadTask\n */\nexport function uploadBytesResumable(\n  ref: StorageReference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: UploadMetadata\n): UploadTask {\n  ref = getModularInstance(ref);\n  return uploadBytesResumableInternal(\n    ref as Reference,\n    data,\n    metadata as MetadataInternal\n  ) as UploadTask;\n}\n\n/**\n * A `Promise` that resolves with the metadata for this object. If this\n * object doesn't exist or metadata cannot be retreived, the promise is\n * rejected.\n * @public\n * @param ref - {@link StorageReference} to get metadata from.\n */\nexport function getMetadata(ref: StorageReference): Promise<FullMetadata> {\n  ref = getModularInstance(ref);\n  return getMetadataInternal(ref as Reference) as Promise<FullMetadata>;\n}\n\n/**\n * Updates the metadata for this object.\n * @public\n * @param ref - {@link StorageReference} to update metadata for.\n * @param metadata - The new metadata for the object.\n *     Only values that have been explicitly set will be changed. Explicitly\n *     setting a value to null will remove the metadata.\n * @returns A `Promise` that resolves with the new metadata for this object.\n */\nexport function updateMetadata(\n  ref: StorageReference,\n  metadata: SettableMetadata\n): Promise<FullMetadata> {\n  ref = getModularInstance(ref);\n  return updateMetadataInternal(\n    ref as Reference,\n    metadata as Partial<MetadataInternal>\n  ) as Promise<FullMetadata>;\n}\n\n/**\n * List items (files) and prefixes (folders) under this storage reference.\n *\n * List API is only available for Firebase Rules Version 2.\n *\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\n * delimited folder structure.\n * Refer to GCS's List API if you want to learn more.\n *\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\n * support objects whose paths end with \"/\" or contain two consecutive\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\n * list() may fail if there are too many unsupported objects in the bucket.\n * @public\n *\n * @param ref - {@link StorageReference} to get list from.\n * @param options - See {@link ListOptions} for details.\n * @returns A `Promise` that resolves with the items and prefixes.\n *      `prefixes` contains references to sub-folders and `items`\n *      contains references to objects in this folder. `nextPageToken`\n *      can be used to get the rest of the results.\n */\nexport function list(\n  ref: StorageReference,\n  options?: ListOptions\n): Promise<ListResult> {\n  ref = getModularInstance(ref);\n  return listInternal(ref as Reference, options);\n}\n\n/**\n * List all items (files) and prefixes (folders) under this storage reference.\n *\n * This is a helper method for calling list() repeatedly until there are\n * no more results. The default pagination size is 1000.\n *\n * Note: The results may not be consistent if objects are changed while this\n * operation is running.\n *\n * Warning: `listAll` may potentially consume too many resources if there are\n * too many results.\n * @public\n * @param ref - {@link StorageReference} to get list from.\n *\n * @returns A `Promise` that resolves with all the items and prefixes under\n *      the current storage reference. `prefixes` contains references to\n *      sub-directories and `items` contains references to objects in this\n *      folder. `nextPageToken` is never returned.\n */\nexport function listAll(ref: StorageReference): Promise<ListResult> {\n  ref = getModularInstance(ref);\n  return listAllInternal(ref as Reference);\n}\n\n/**\n * Returns the download URL for the given {@link StorageReference}.\n * @public\n * @param ref - {@link StorageReference} to get the download URL for.\n * @returns A `Promise` that resolves with the download\n *     URL for this object.\n */\nexport function getDownloadURL(ref: StorageReference): Promise<string> {\n  ref = getModularInstance(ref);\n  return getDownloadURLInternal(ref as Reference);\n}\n\n/**\n * Deletes the object at this location.\n * @public\n * @param ref - {@link StorageReference} for object to delete.\n * @returns A `Promise` that resolves if the deletion succeeds.\n */\nexport function deleteObject(ref: StorageReference): Promise<void> {\n  ref = getModularInstance(ref);\n  return deleteObjectInternal(ref as Reference);\n}\n\n/**\n * Returns a {@link StorageReference} for the given url.\n * @param storage - {@link FirebaseStorage} instance.\n * @param url - URL. If empty, returns root reference.\n * @public\n */\nexport function ref(storage: FirebaseStorage, url?: string): StorageReference;\n/**\n * Returns a {@link StorageReference} for the given path in the\n * default bucket.\n * @param storageOrRef - {@link FirebaseStorage} or {@link StorageReference}.\n * @param pathOrUrlStorage - path. If empty, returns root reference (if {@link FirebaseStorage}\n * instance provided) or returns same reference (if {@link StorageReference} provided).\n * @public\n */\nexport function ref(\n  storageOrRef: FirebaseStorage | StorageReference,\n  path?: string\n): StorageReference;\nexport function ref(\n  serviceOrRef: FirebaseStorage | StorageReference,\n  pathOrUrl?: string\n): StorageReference | null {\n  serviceOrRef = getModularInstance(serviceOrRef);\n  return refInternal(\n    serviceOrRef as FirebaseStorageImpl | Reference,\n    pathOrUrl\n  );\n}\n\n/**\n * @internal\n */\nexport function _getChild(ref: StorageReference, childPath: string): Reference {\n  return _getChildInternal(ref as Reference, childPath);\n}\n\n/**\n * Gets a {@link FirebaseStorage} instance for the given Firebase app.\n * @public\n * @param app - Firebase app to get {@link FirebaseStorage} instance for.\n * @param bucketUrl - The gs:// url to your Firebase Storage Bucket.\n * If not passed, uses the app's default Storage Bucket.\n * @returns A {@link FirebaseStorage} instance.\n */\nexport function getStorage(\n  app: FirebaseApp = getApp(),\n  bucketUrl?: string\n): FirebaseStorage {\n  app = getModularInstance(app);\n  const storageProvider: Provider<'storage'> = _getProvider(app, STORAGE_TYPE);\n  const storageInstance = storageProvider.getImmediate({\n    identifier: bucketUrl\n  });\n  const emulator = getDefaultEmulatorHostnameAndPort('storage');\n  if (emulator) {\n    connectStorageEmulator(storageInstance, ...emulator);\n  }\n  return storageInstance;\n}\n\n/**\n * Modify this {@link FirebaseStorage} instance to communicate with the Cloud Storage emulator.\n *\n * @param storage - The {@link FirebaseStorage} instance\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 5001)\n * @param options - Emulator options. `options.mockUserToken` is the mock auth\n * token to use for unit testing Security Rules.\n * @public\n */\nexport function connectStorageEmulator(\n  storage: FirebaseStorage,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  connectEmulatorInternal(storage as FirebaseStorageImpl, host, port, options);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { StorageReference } from './public-types';\nimport { Reference, getBlobInternal } from './reference';\nimport { getModularInstance } from '@firebase/util';\n\n/**\n * Downloads the data at the object's location. Returns an error if the object\n * is not found.\n *\n * To use this functionality, you have to whitelist your app's origin in your\n * Cloud Storage bucket. See also\n * https://cloud.google.com/storage/docs/configuring-cors\n *\n * This API is not available in Node.\n *\n * @public\n * @param ref - StorageReference where data should be downloaded.\n * @param maxDownloadSizeBytes - If set, the maximum allowed size in bytes to\n * retrieve.\n * @returns A Promise that resolves with a Blob containing the object's bytes\n */\nexport function getBlob(\n  ref: StorageReference,\n  maxDownloadSizeBytes?: number\n): Promise<Blob> {\n  ref = getModularInstance(ref);\n  return getBlobInternal(ref as Reference, maxDownloadSizeBytes);\n}\n\n/**\n * Downloads the data at the object's location. Raises an error event if the\n * object is not found.\n *\n * This API is only available in Node.\n *\n * @public\n * @param ref - StorageReference where data should be downloaded.\n * @param maxDownloadSizeBytes - If set, the maximum allowed size in bytes to\n * retrieve.\n * @returns A stream with the object's data as bytes\n */\nexport function getStream(\n  ref: StorageReference,\n  maxDownloadSizeBytes?: number\n): NodeJS.ReadableStream {\n  throw new Error('getStream() is only supported by NodeJS builds');\n}\n","/**\n * Cloud Storage for Firebase\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _registerComponent,\n  registerVersion,\n  SDK_VERSION\n} from '@firebase/app';\n\nimport { FirebaseStorageImpl } from '../src/service';\nimport {\n  Component,\n  ComponentType,\n  ComponentContainer,\n  InstanceFactoryOptions\n} from '@firebase/component';\n\nimport { name, version } from '../package.json';\n\nimport { FirebaseStorage } from './public-types';\nimport { STORAGE_TYPE } from './constants';\n\nexport * from './api';\nexport * from './api.browser';\n\nfunction factory(\n  container: ComponentContainer,\n  { instanceIdentifier: url }: InstanceFactoryOptions\n): FirebaseStorage {\n  const app = container.getProvider('app').getImmediate();\n  const authProvider = container.getProvider('auth-internal');\n  const appCheckProvider = container.getProvider('app-check-internal');\n\n  return new FirebaseStorageImpl(\n    app,\n    authProvider,\n    appCheckProvider,\n    url,\n    SDK_VERSION\n  );\n}\n\nfunction registerStorage(): void {\n  _registerComponent(\n    new Component(\n      STORAGE_TYPE,\n      factory,\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n  //RUNTIME_ENV will be replaced during the compilation to \"node\" for nodejs and an empty string for browser\n  registerVersion(name, version, '__RUNTIME_ENV__');\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n\nregisterStorage();\n"],"names":["getBlob","getMetadata","list","getBytes","updateMetadata","deleteObject","fbsAsync","uploadBytes","uploadBytesResumable","uploadString","listAll","requestsList","requestsGetMetadata","requestsUpdateMetadata","getDownloadURL","requestsGetDownloadUrl","requestsDeleteObject","_getChild","ref","connectStorageEmulator","uploadBytesInternal","uploadStringInternal","uploadBytesResumableInternal","getMetadataInternal","updateMetadataInternal","listInternal","listAllInternal","getDownloadURLInternal","deleteObjectInternal","refInternal","_getChildInternal","connectEmulatorInternal"],"version":3,"file":"index.5d2cbdc5.js.map","sourceRoot":"/__parcel_source_root/"}